{
"version":3,
"file":"module$node_modules$react_dnd_html5_backend$dist$NativeDragSources$index.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,wEAAA,CAA6F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGrIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,sBAAR,CAOAA,QAA+B,CAACC,IAAD,CAAOC,YAAP,CAAqB,CAClD,MAAMC,OAASC,kBAAmBC,CAAAA,iBAAnB,CAAqCJ,IAArC,CAEf,IAAI,CAACE,MAAL,CACE,KAAUG,MAAJ,CAAU,eAAeL,IAAf,uBAAV,CAAN,CAGIM,IAAAA,CAAS,IAAIC,iBAAkBC,CAAAA,gBAAtB,CAAuCN,MAAvC,CACfI,KAAOG,CAAAA,gBAAP,CAAwBR,YAAxB,CACA,OAAOK,KAT2C,CANpDX,QAAQe,CAAAA,mBAAR,CAkBAA,QAA4B,CAACT,YAAD,CAAe,CACzC,GAAI,CAACA,YAAL,CACE,MAAO,KAGT;MAAMU,kBAAoBC,KAAMC,CAAAA,SAAUC,CAAAA,KAAMC,CAAAA,IAAtB,CAA2Bd,YAAae,CAAAA,KAAxC,EAAiD,EAAjD,CAC1B,OAAOpB,OAAOqB,CAAAA,IAAP,CAAYd,kBAAmBC,CAAAA,iBAA/B,CAAkDc,CAAAA,MAAlD,CAAyDC,cAAA,EAAkB,CAC1EC,cAAAA,CAAajB,kBAAmBC,CAAAA,iBAAnB,CAAqCe,cAArC,CAEnB,OAAqB,KAArB,GAAMC,cAAN,EAA4C,IAAK,EAAjD,GAA6BA,cAA7B,EAA8DA,cAAWC,CAAAA,YAAzE,CAIOD,cAAWC,CAAAA,YAAaC,CAAAA,IAAxB,CAA6BC,CAAA,EAAoC,CAAC,CAArC,CAAKZ,iBAAkBa,CAAAA,OAAlB,CAA0BD,CAA1B,CAAlC,CAJP,CACS,CAAA,CAJuE,CAA3E,CAAA,CAQJ,CARI,CAAP,EAQS,IAdgC,CAhB3C,KAAIhB,kBAAoBd,OAAA,CAAQ,qFAAR,CAAxB;AAEIU,mBAAqBV,OAAA,CAAQ,sFAAR,CAX4G;",
"sources":["node_modules/react-dnd-html5-backend/dist/NativeDragSources/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_dnd_html5_backend$dist$NativeDragSources$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createNativeDragSource = createNativeDragSource;\nexports.matchNativeItemType = matchNativeItemType;\n\nvar _NativeDragSource = require(\"./NativeDragSource.js\");\n\nvar _nativeTypesConfig = require(\"./nativeTypesConfig.js\");\n\nfunction createNativeDragSource(type, dataTransfer) {\n  const config = _nativeTypesConfig.nativeTypesConfig[type];\n\n  if (!config) {\n    throw new Error(`native type ${type} has no configuration`);\n  }\n\n  const result = new _NativeDragSource.NativeDragSource(config);\n  result.loadDataTransfer(dataTransfer);\n  return result;\n}\n\nfunction matchNativeItemType(dataTransfer) {\n  if (!dataTransfer) {\n    return null;\n  }\n\n  const dataTransferTypes = Array.prototype.slice.call(dataTransfer.types || []);\n  return Object.keys(_nativeTypesConfig.nativeTypesConfig).filter(nativeItemType => {\n    const typeConfig = _nativeTypesConfig.nativeTypesConfig[nativeItemType];\n\n    if (!(typeConfig === null || typeConfig === void 0 ? void 0 : typeConfig.matchesTypes)) {\n      return false;\n    }\n\n    return typeConfig.matchesTypes.some(t => dataTransferTypes.indexOf(t) > -1);\n  })[0] || null;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createNativeDragSource","type","dataTransfer","config","_nativeTypesConfig","nativeTypesConfig","Error","result","_NativeDragSource","NativeDragSource","loadDataTransfer","matchNativeItemType","dataTransferTypes","Array","prototype","slice","call","types","keys","filter","nativeItemType","typeConfig","matchesTypes","some","t","indexOf"]
}

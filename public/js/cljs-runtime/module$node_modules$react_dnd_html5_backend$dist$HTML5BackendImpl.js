shadow$provide.module$node_modules$react_dnd_html5_backend$dist$HTML5BackendImpl=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?
arguments[i]:{},ownKeys=Object.keys(source);"function"===typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable})));ownKeys.forEach(function(key){var value=source[key];key in target?Object.defineProperty(target,key,{value,enumerable:!0,configurable:!0,writable:!0}):target[key]=value})}return target}Object.defineProperty(exports,"__esModule",{value:!0});exports.HTML5BackendImpl=
void 0;var _EnterLeaveCounter=require("module$node_modules$react_dnd_html5_backend$dist$EnterLeaveCounter"),_index=require("module$node_modules$react_dnd_html5_backend$dist$NativeDragSources$index"),NativeTypes=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=
Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require("module$node_modules$react_dnd_html5_backend$dist$NativeTypes")),_OffsetUtils=require("module$node_modules$react_dnd_html5_backend$dist$OffsetUtils"),
_OptionsReader=require("module$node_modules$react_dnd_html5_backend$dist$OptionsReader");class HTML5BackendImpl{profile(){var ref,ref1;return{sourcePreviewNodes:this.sourcePreviewNodes.size,sourcePreviewNodeOptions:this.sourcePreviewNodeOptions.size,sourceNodeOptions:this.sourceNodeOptions.size,sourceNodes:this.sourceNodes.size,dragStartSourceIds:(null===(ref=this.dragStartSourceIds)||void 0===ref?void 0:ref.length)||0,dropTargetIds:this.dropTargetIds.length,dragEnterTargetIds:this.dragEnterTargetIds.length,
dragOverTargetIds:(null===(ref1=this.dragOverTargetIds)||void 0===ref1?void 0:ref1.length)||0}}get window(){return this.options.window}get document(){return this.options.document}get rootElement(){return this.options.rootElement}setup(){const root=this.rootElement;if(void 0!==root){if(root.__isReactDndBackendSetUp)throw Error("Cannot have two HTML5 backends at the same time.");root.__isReactDndBackendSetUp=!0;this.addEventListeners(root)}}teardown(){const root=this.rootElement;if(void 0!==root&&(root.__isReactDndBackendSetUp=
!1,this.removeEventListeners(this.rootElement),this.clearCurrentDragSourceNode(),this.asyncEndDragFrameId)){var ref;null===(ref=this.window)||void 0===ref?void 0:ref.cancelAnimationFrame(this.asyncEndDragFrameId)}}connectDragPreview(sourceId,node,options){this.sourcePreviewNodeOptions.set(sourceId,options);this.sourcePreviewNodes.set(sourceId,node);return()=>{this.sourcePreviewNodes.delete(sourceId);this.sourcePreviewNodeOptions.delete(sourceId)}}connectDragSource(sourceId,node,options){this.sourceNodes.set(sourceId,
node);this.sourceNodeOptions.set(sourceId,options);const handleDragStart=e=>this.handleDragStart(e,sourceId),handleSelectStart=e=>this.handleSelectStart(e);node.setAttribute("draggable","true");node.addEventListener("dragstart",handleDragStart);node.addEventListener("selectstart",handleSelectStart);return()=>{this.sourceNodes.delete(sourceId);this.sourceNodeOptions.delete(sourceId);node.removeEventListener("dragstart",handleDragStart);node.removeEventListener("selectstart",handleSelectStart);node.setAttribute("draggable",
"false")}}connectDropTarget(targetId,node){const handleDragEnter=e=>this.handleDragEnter(e,targetId),handleDragOver=e=>this.handleDragOver(e,targetId),handleDrop=e=>this.handleDrop(e,targetId);node.addEventListener("dragenter",handleDragEnter);node.addEventListener("dragover",handleDragOver);node.addEventListener("drop",handleDrop);return()=>{node.removeEventListener("dragenter",handleDragEnter);node.removeEventListener("dragover",handleDragOver);node.removeEventListener("drop",handleDrop)}}addEventListeners(target){target.addEventListener&&
(target.addEventListener("dragstart",this.handleTopDragStart),target.addEventListener("dragstart",this.handleTopDragStartCapture,!0),target.addEventListener("dragend",this.handleTopDragEndCapture,!0),target.addEventListener("dragenter",this.handleTopDragEnter),target.addEventListener("dragenter",this.handleTopDragEnterCapture,!0),target.addEventListener("dragleave",this.handleTopDragLeaveCapture,!0),target.addEventListener("dragover",this.handleTopDragOver),target.addEventListener("dragover",this.handleTopDragOverCapture,
!0),target.addEventListener("drop",this.handleTopDrop),target.addEventListener("drop",this.handleTopDropCapture,!0))}removeEventListeners(target){target.removeEventListener&&(target.removeEventListener("dragstart",this.handleTopDragStart),target.removeEventListener("dragstart",this.handleTopDragStartCapture,!0),target.removeEventListener("dragend",this.handleTopDragEndCapture,!0),target.removeEventListener("dragenter",this.handleTopDragEnter),target.removeEventListener("dragenter",this.handleTopDragEnterCapture,
!0),target.removeEventListener("dragleave",this.handleTopDragLeaveCapture,!0),target.removeEventListener("dragover",this.handleTopDragOver),target.removeEventListener("dragover",this.handleTopDragOverCapture,!0),target.removeEventListener("drop",this.handleTopDrop),target.removeEventListener("drop",this.handleTopDropCapture,!0))}getCurrentSourceNodeOptions(){var sourceId=this.monitor.getSourceId();sourceId=this.sourceNodeOptions.get(sourceId);return _objectSpread({dropEffect:this.altKeyPressed?"copy":
"move"},sourceId||{})}getCurrentDropEffect(){return this.isDraggingNativeItem()?"copy":this.getCurrentSourceNodeOptions().dropEffect}getCurrentSourcePreviewNodeOptions(){var sourceId=this.monitor.getSourceId();sourceId=this.sourcePreviewNodeOptions.get(sourceId);return _objectSpread({anchorX:.5,anchorY:.5,captureDraggingState:!1},sourceId||{})}isDraggingNativeItem(){const itemType=this.monitor.getItemType();return Object.keys(NativeTypes).some(key=>NativeTypes[key]===itemType)}beginDragNativeItem(type,
dataTransfer){this.clearCurrentDragSourceNode();this.currentNativeSource=(0,_index.createNativeDragSource)(type,dataTransfer);this.currentNativeHandle=this.registry.addSource(type,this.currentNativeSource);this.actions.beginDrag([this.currentNativeHandle])}setCurrentDragSourceNode(node){this.clearCurrentDragSourceNode();this.currentDragSourceNode=node;this.mouseMoveTimeoutTimer=setTimeout(()=>{var ref;return null===(ref=this.rootElement)||void 0===ref?void 0:ref.addEventListener("mousemove",this.endDragIfSourceWasRemovedFromDOM,
!0)},1E3)}clearCurrentDragSourceNode(){if(this.currentDragSourceNode){this.currentDragSourceNode=null;if(this.rootElement){var ref;null===(ref=this.window)||void 0===ref?void 0:ref.clearTimeout(this.mouseMoveTimeoutTimer||void 0);this.rootElement.removeEventListener("mousemove",this.endDragIfSourceWasRemovedFromDOM,!0)}this.mouseMoveTimeoutTimer=null;return!0}return!1}handleDragStart(e,sourceId){e.defaultPrevented||(this.dragStartSourceIds||(this.dragStartSourceIds=[]),this.dragStartSourceIds.unshift(sourceId))}handleDragEnter(_e,
targetId){this.dragEnterTargetIds.unshift(targetId)}handleDragOver(_e,targetId){null===this.dragOverTargetIds&&(this.dragOverTargetIds=[]);this.dragOverTargetIds.unshift(targetId)}handleDrop(_e,targetId){this.dropTargetIds.unshift(targetId)}constructor(manager,globalContext,options){this.sourcePreviewNodes=new Map;this.sourcePreviewNodeOptions=new Map;this.sourceNodes=new Map;this.sourceNodeOptions=new Map;this.dragStartSourceIds=null;this.dropTargetIds=[];this.dragEnterTargetIds=[];this.currentDragSourceNode=
this.currentNativeHandle=this.currentNativeSource=null;this.altKeyPressed=!1;this.hoverRafId=this.lastClientOffset=this.dragOverTargetIds=this.asyncEndDragFrameId=this.mouseMoveTimeoutTimer=null;this.getSourceClientOffset=sourceId=>(sourceId=this.sourceNodes.get(sourceId))&&(0,_OffsetUtils.getNodeClientOffset)(sourceId)||null;this.endDragNativeItem=()=>{this.isDraggingNativeItem()&&(this.actions.endDrag(),this.currentNativeHandle&&this.registry.removeSource(this.currentNativeHandle),this.currentNativeSource=
this.currentNativeHandle=null)};this.isNodeInDocument=node=>!!(node&&this.document&&this.document.body&&this.document.body.contains(node));this.endDragIfSourceWasRemovedFromDOM=()=>{const node=this.currentDragSourceNode;null==node||this.isNodeInDocument(node)||(this.clearCurrentDragSourceNode()&&this.monitor.isDragging()&&this.actions.endDrag(),this.cancelHover())};this.scheduleHover=dragOverTargetIds=>{null===this.hoverRafId&&"undefined"!==typeof requestAnimationFrame&&(this.hoverRafId=requestAnimationFrame(()=>
{this.monitor.isDragging()&&this.actions.hover(dragOverTargetIds||[],{clientOffset:this.lastClientOffset});this.hoverRafId=null}))};this.cancelHover=()=>{null!==this.hoverRafId&&"undefined"!==typeof cancelAnimationFrame&&(cancelAnimationFrame(this.hoverRafId),this.hoverRafId=null)};this.handleTopDragStartCapture=()=>{this.clearCurrentDragSourceNode();this.dragStartSourceIds=[]};this.handleTopDragStart=e=>{if(!e.defaultPrevented){var {dragStartSourceIds}=this;this.dragStartSourceIds=null;var clientOffset=
(0,_OffsetUtils.getEventClientOffset)(e);this.monitor.isDragging()&&(this.actions.endDrag(),this.cancelHover());this.actions.beginDrag(dragStartSourceIds||[],{publishSource:!1,getSourceClientOffset:this.getSourceClientOffset,clientOffset});({dataTransfer:dragStartSourceIds}=e);var nativeType=(0,_index.matchNativeItemType)(dragStartSourceIds);if(this.monitor.isDragging()){if(dragStartSourceIds&&"function"===typeof dragStartSourceIds.setDragImage){var sourceId=this.monitor.getSourceId();nativeType=
this.sourceNodes.get(sourceId);if(sourceId=this.sourcePreviewNodes.get(sourceId)||nativeType){const {anchorX,anchorY,offsetX,offsetY}=this.getCurrentSourcePreviewNodeOptions();clientOffset=(0,_OffsetUtils.getDragPreviewOffset)(nativeType,sourceId,clientOffset,{anchorX,anchorY},{offsetX,offsetY});dragStartSourceIds.setDragImage(sourceId,clientOffset.x,clientOffset.y)}}try{null===dragStartSourceIds||void 0===dragStartSourceIds?void 0:dragStartSourceIds.setData("application/json",{})}catch(err){}this.setCurrentDragSourceNode(e.target);
({captureDraggingState:e}=this.getCurrentSourcePreviewNodeOptions());e?this.actions.publishDragSource():setTimeout(()=>this.actions.publishDragSource(),0)}else nativeType?this.beginDragNativeItem(nativeType):(!dragStartSourceIds||dragStartSourceIds.types||(!e.target||e.target.hasAttribute)&&e.target.hasAttribute("draggable"))&&e.preventDefault()}};this.handleTopDragEndCapture=()=>{this.clearCurrentDragSourceNode()&&this.monitor.isDragging()&&this.actions.endDrag();this.cancelHover()};this.handleTopDragEnterCapture=
e=>{this.dragEnterTargetIds=[];if(this.isDraggingNativeItem()){var ref;null===(ref=this.currentNativeSource)||void 0===ref?void 0:ref.loadDataTransfer(e.dataTransfer)}this.enterLeaveCounter.enter(e.target)&&!this.monitor.isDragging()&&({dataTransfer:e}=e,(ref=(0,_index.matchNativeItemType)(e))&&this.beginDragNativeItem(ref,e))};this.handleTopDragEnter=e=>{const {dragEnterTargetIds}=this;this.dragEnterTargetIds=[];this.monitor.isDragging()&&(this.altKeyPressed=e.altKey,0<dragEnterTargetIds.length&&
this.actions.hover(dragEnterTargetIds,{clientOffset:(0,_OffsetUtils.getEventClientOffset)(e)}),dragEnterTargetIds.some(targetId=>this.monitor.canDropOnTarget(targetId))&&(e.preventDefault(),e.dataTransfer&&(e.dataTransfer.dropEffect=this.getCurrentDropEffect())))};this.handleTopDragOverCapture=e=>{this.dragOverTargetIds=[];if(this.isDraggingNativeItem()){var ref;null===(ref=this.currentNativeSource)||void 0===ref?void 0:ref.loadDataTransfer(e.dataTransfer)}};this.handleTopDragOver=e=>{const {dragOverTargetIds}=
this;this.dragOverTargetIds=[];this.monitor.isDragging()?(this.altKeyPressed=e.altKey,this.lastClientOffset=(0,_OffsetUtils.getEventClientOffset)(e),this.scheduleHover(dragOverTargetIds),(dragOverTargetIds||[]).some(targetId=>this.monitor.canDropOnTarget(targetId))?(e.preventDefault(),e.dataTransfer&&(e.dataTransfer.dropEffect=this.getCurrentDropEffect())):this.isDraggingNativeItem()?e.preventDefault():(e.preventDefault(),e.dataTransfer&&(e.dataTransfer.dropEffect="none"))):(e.preventDefault(),e.dataTransfer&&
(e.dataTransfer.dropEffect="none"))};this.handleTopDragLeaveCapture=e=>{this.isDraggingNativeItem()&&e.preventDefault();this.enterLeaveCounter.leave(e.target)&&(this.isDraggingNativeItem()&&setTimeout(()=>this.endDragNativeItem(),0),this.cancelHover())};this.handleTopDropCapture=e=>{this.dropTargetIds=[];if(this.isDraggingNativeItem()){var ref;e.preventDefault();null===(ref=this.currentNativeSource)||void 0===ref?void 0:ref.loadDataTransfer(e.dataTransfer)}else(0,_index.matchNativeItemType)(e.dataTransfer)&&
e.preventDefault();this.enterLeaveCounter.reset()};this.handleTopDrop=e=>{const {dropTargetIds}=this;this.dropTargetIds=[];this.actions.hover(dropTargetIds,{clientOffset:(0,_OffsetUtils.getEventClientOffset)(e)});this.actions.drop({dropEffect:this.getCurrentDropEffect()});this.isDraggingNativeItem()?this.endDragNativeItem():this.monitor.isDragging()&&this.actions.endDrag();this.cancelHover()};this.handleSelectStart=e=>{const target=e.target;"function"!==typeof target.dragDrop||"INPUT"===target.tagName||
"SELECT"===target.tagName||"TEXTAREA"===target.tagName||target.isContentEditable||(e.preventDefault(),target.dragDrop())};this.options=new _OptionsReader.OptionsReader(globalContext,options);this.actions=manager.getActions();this.monitor=manager.getMonitor();this.registry=manager.getRegistry();this.enterLeaveCounter=new _EnterLeaveCounter.EnterLeaveCounter(this.isNodeInDocument)}}exports.HTML5BackendImpl=HTML5BackendImpl}
//# sourceMappingURL=module$node_modules$react_dnd_html5_backend$dist$HTML5BackendImpl.js.map

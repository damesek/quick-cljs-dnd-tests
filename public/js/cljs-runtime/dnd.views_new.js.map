{"version":3,"sources":["dnd/views_new.cljs"],"mappings":"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","names":["cljs.core/enable-console-print!","dnd.views-new/dragged?","reagent.core.atom","dnd.views-new/black-hole-pos","dnd.views-new/draggable","dnd.views-new/close?","x","y","Math/abs","dnd.views-new/get-client-rect","evt","r","dnd.views-new/mouse-move-handler","offset","cljs.core/reset!","dnd.views-new/mouse-up-handler","on-move","goog.events/unlisten","js/window","goog.events.EventType/MOUSEMOVE","dnd.views-new/mouse-down-handler","e","map__15277","cljs.core/--destructure-map","cljs.core.get","left","top","goog.events/listen","goog.events.EventType/MOUSEUP","dnd.views-new/draggable-button","cljs.core/deref","cljs.core.pr_str","dnd.views-new/drag-and-drop","content","reagent.core.create_class","dnd.dnd/subscribe!","js/document.documentElement","cljs.core.println","file","_","class-list","js/document.querySelector","dnd.dnd/unsubscribe!","js/console.log","dnd.views-new/draggable-wrapper","item","reagent-child-fn","vec__15278","cljs.core.nth","dnd-props","ref","preview-ref","js/module$node_modules$react_dnd$dist$index.useDrag","cljs.core/clj->js","monitor","is-dragging?","reagent.core.as_element","dnd.views-new/droppable-wrapper","can-drop-fn","drop-fn","vec__15281","collect-cache-atm","js/module$node_modules$react_dnd$dist$index.useDrop","vec__15284","now","js/Date","ms","cache","and__4251__auto__","is-over?","can-drop?","ret","dnd.views-new/dropped","dnd.views-new/->menu","dnd.views-new/menu-selector","menu-elem","cljs.core._EQ_","dnd.views-new/menu","dnd.views-new/header","G__15287","cljs.core/Keyword","dnd.views-new/draggable-main","canDrop?","dropEvent","js/module$node_modules$react_dnd$dist$index.DndProvider","js/module$node_modules$react_dnd_html5_backend$dist$index.HTML5Backend","dnd.views-new/bork-assimilated","dnd.views-new/dnd-kit","dnd.views-new/quick-dnd-test","G__15288","dnd.views-new/app"],"sourcesContent":["(ns dnd.views-new\n  (:require-macros [cljs.core.async.macros :refer (go)])\n  (:require [reagent.core :as r :refer [atom]]\n            [react :as react]\n            [dnd.dnd :as dnd]\n            [\"react-dnd\" :as react-dnd :refer [DndProvider useDrag useDrop useDragLayer]]\n            [\"react-dnd-html5-backend\" :as react-html5-backend]\n            [\"react-dnd-touch-backend\" :as react-dnd-touch-backend]\n            [cljs.core.async :refer (<!)]\n            [goog.events :as events])\n  (:import [goog.events EventType]))\n\n\n(enable-console-print!)\n\n(def dragged? (r/atom false))\n\n;; ************** Borkdude DnD simple version, maybe the best approach  ********************\n\n;; Constants and references\n\n(def black-hole-pos {:x 400 :y 400})\n\n(def draggable (atom {:x 200 :y 300 :alive? true}))\n\n\n;; Utility functions\n\n(defn close? [x y]\n      (and (< (Math/abs (- x (:x black-hole-pos))) 50)\n           (< (Math/abs (- y (:y black-hole-pos))) 50)))\n\n\n(defn get-client-rect [evt]\n      (let [r (.getBoundingClientRect (.-target evt))]\n           {:left (.-left r), :top (.-top r)}))\n\n\n;; Event handlers\n\n(defn mouse-move-handler [offset]\n      (fn [evt]\n          (let [x (- (.-clientX evt) (:x offset))\n                y (- (.-clientY evt) (:y offset))]\n               (if (close? x y)\n                 (reset! draggable {:alive? false})\n                 (reset! draggable {:x      x\n                                    :y      y\n                                    :alive? true})))))\n\n\n(defn mouse-up-handler [on-move]\n      (fn me [evt]\n          (events/unlisten js/window EventType.MOUSEMOVE\n                           on-move)))\n\n\n(defn mouse-down-handler [e]\n      (let [{:keys [left top]} (get-client-rect e)\n            offset {:x (- (.-clientX e) left)\n                    :y (- (.-clientY e) top)}\n            on-move (mouse-move-handler offset)]\n           (events/listen js/window EventType.MOUSEMOVE\n                          on-move)\n           (events/listen js/window EventType.MOUSEUP\n                          (mouse-up-handler on-move))))\n\n\n(defn draggable-button []\n      [:div\n       [:h1 (pr-str @draggable)]\n       [:button.bg-red-100.px-4.py-2.rounded-md.shadow-md\n        {:style {:position   \"absolute\"\n                 :left       (str (:x black-hole-pos) \"px\") ;\n                 :top        (str (:y black-hole-pos) \"px\")\n                 :background \"color: black;\"}}\n        \"Not here please\"]\n       (if (:alive? @draggable)\n         [:div.py-3.px-5.shadow-lg.rounded-lg.bg-teal-700.text-white\n          {:style         {:position \"absolute\"\n                           :left     (str (:x @draggable) \"px\") ;\n                           :top      (str (:y @draggable) \"px\")}\n           :on-mouse-down mouse-down-handler}\n          \"Im flying around - Drag me!\"])])\n\n\n;; ****************** file drop to input field *************\n\n\n(defn drag-and-drop []\n      (let [content (r/atom false)]\n           (r/create-class\n             {:component-will-mount   (fn []\n                                          (dnd/subscribe! js/document.documentElement ::picture\n                                                          {:start (fn [e]\n                                                                      (println \"started something\" e))\n\n                                                           :drop  (fn [e file]\n                                                                      (when e\n                                                                            (reset! dragged? true)\n                                                                            (println \"dropped\" e file)))\n\n                                                           :end   (fn [_]\n                                                                      (let [class-list (-> (js/document.querySelector \".picture\")\n                                                                                           (.-classList))]\n                                                                           (.add class-list \"none\")\n                                                                           (.remove class-list \"block\")))}))\n\n              :component-will-unmount (fn []\n                                          (dnd/unsubscribe! js/document.documentElement ::picture)\n                                          (js/console.log \"component will unmount\"))\n              :reagent-render         (fn []\n                                          [:div.picture\n                                           [:p \"hello me\"]\n                                           [:p \"dropped?\" (str @dragged?)]])})))\n\n\n\n\n;; ***************** react dnd html5 test *************************\n; https://github.com/deckeraa/react-dnd-in-reagent/blob/master/src/cljs/react_dnd_in_reagent/core.cljs\n\n;; -------------------------\n;; Page components\n\n(defn draggable-wrapper [item reagent-child-fn]\n      [:>\n       (fn []\n           (let [[dnd-props ref preview-ref] (useDrag (clj->js {:type    :block\n                                                                :item    item\n                                                                :collect (fn [monitor]\n                                                                             (let [is-dragging? (.isDragging ^js monitor)]\n                                                                                  {:is-dragging? is-dragging?}))}))]\n                (r/as-element\n                  (reagent-child-fn ref preview-ref dnd-props))))])\n\n(defn droppable-wrapper [can-drop-fn drop-fn reagent-child-fn]\n      [:>\n       (fn []\n           (let [collect-cache-atm (atom nil)\n                 [dnd-props ref] (useDrop (clj->js {:accept  :block\n                                                    :drop    drop-fn\n                                                    :canDrop can-drop-fn\n                                                    :collect (fn [monitor]\n                                                                 ;; this debounce function was inspired by https://github.com/react-dnd/react-dnd/issues/421\n                                                                 (let [now (.now js/Date)\n                                                                       [ms cache] @collect-cache-atm]\n                                                                      (if (and cache\n                                                                               (< (- now ms) 50))\n                                                                        cache\n                                                                        (let [is-over? (.isOver ^js monitor)\n                                                                              can-drop? (.canDrop ^js monitor)\n                                                                              ;; item (.getItem ^js monitor)\n                                                                              ret {:is-over?  is-over?\n                                                                                   :can-drop? can-drop?\n                                                                                   ;;:item item\n                                                                                   }]\n                                                                             (reset! collect-cache-atm [now ret])\n                                                                             ret))))}))]\n                (r/as-element (reagent-child-fn ref dnd-props))))])\n\n\n\n;; ************* UI ***********\n\n(def dropped (r/atom nil))\n(def ->menu (r/atom :wearebork))\n\n(defn menu-selector [menu-elem]\n      {:on-click #(reset! ->menu menu-elem)\n       :class    (if (= @->menu menu-elem) \"bg-gray-900.text-white\")})\n\n(defn menu\n      []\n      [:nav.bg-gray-800\n       [:div.max-w-7xl.mx-auto.px-4.sm:px-6.lg:px-8\n        [:div.flex.items-center.justify-between.h-16\n         [:div.flex.items-center\n          [:div.flex-shrink-0\n           [:img.h-8.w-8 {:src \"img/compass-logo-gray-50.png\" :alt \"Measure and build\"}]]\n          [:div.hidden.md:block\n           [:div.ml-10.flex.items-baseline.space-x-4\n            [:a.bg-gray-900.text-white.px-3.py-2.rounded-md.text-sm.font-medium\n             (menu-selector :react-dnd) \"React-DND Test\"]\n            [:a.text-gray-300.hover:bg-gray-700.hover:text-white.px-3.py-2.rounded-md.text-sm.font-medium\n             (menu-selector :dnd-kit) \"@DnD-Kit\"]\n            [:a.text-gray-300.hover:bg-gray-700.hover:text-white.px-3.py-2.rounded-md.text-sm.font-medium\n             (menu-selector :wearebork) \"WeAreBork\"]]]]]]])\n\n\n(defn header []\n      [:header.bg-white.shadow\n       [:div.max-w-7xl.mx-auto.py-6.px-4.sm:px-6.lg:px-8\n        [:h1.text-3xl.font-bold.text-gray-900 (case @->menu\n                                                    :react-dnd \"React-DnD Playground\"\n                                                    :dnd-kit \"DnD-Kit Playground\"\n                                                    :wearebork \"Bork Assimilate You!\"\n                                                    \"What?\")]]])\n\n\n(defn draggable-main []\n      (let [canDrop? (fn [] true)\n            dropEvent (fn [] (println \"drop\"))]\n           [:main\n            [:div.max-w-7xl.mx-auto.py-6.sm:px-6.lg:px-8\n             [:div.px-4.py-6.sm:px-0\n              [:div.border-2.border-dashed.border-gray-200.rounded-lg.h-96\n               [:> DndProvider {:backend react-html5-backend/HTML5Backend}\n                [:div.flex.grid.gap-4.grid-cols-8.p-3\n                 [:div.col-span-5.bg-teal-50\n                  [droppable-wrapper canDrop? dropEvent\n                   (fn [ref dnd-props]\n                       [:div.h-40.w-full.bg-teal-50.rounded-lg.shadow-md.content-center.flex.justify-center\n                        {:ref ref}\n                        [:p.text-gray-200.self-center.text-4xl.font-semibold \"drop here\"]])]]\n                 [:div.col-span-3.border-2.border-dashed.border-gray-100\n                  [draggable-wrapper {}\n                   (fn [ref preview-ref dnd-props]\n                       [:div.flex.py-3.px-5.m-2.w-48.rounded-md.shadow-md.bg-teal-700.text-white.justify-center.m-3\n                        {:ref ref :style {:padding \"4px\"}} \"Try me out Button!\"]\n                       )]]]]]]]]))\n\n(defn bork-assimilated []\n      [:main\n       [:div.max-w-7xl.mx-auto.py-6.sm:px-6.lg:px-8\n        [:div.px-4.py-6.sm:px-0\n         [:p \"WE ARE BORK!\"]\n         [draggable-button]\n         ]]])\n\n(defn dnd-kit []\n      [:main\n       [:div.max-w-7xl.mx-auto.py-6.sm:px-6.lg:px-8\n        [:div.px-4.py-6.sm:px-0\n         [:p \"I don't have clue what I do :)\"]\n         ;[draggable-button]\n         ]]])\n\n(defn quick-dnd-test []\n      [:div.min-h-full\n       [menu]\n       [header]\n       (case @->menu\n             :react-dnd [draggable-main]\n             :dnd-kit [dnd-kit]\n             :wearebork [bork-assimilated]\n             [draggable-main])])\n\n\n(defn app []\n      [quick-dnd-test])\n"]}
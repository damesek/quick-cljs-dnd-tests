{
"version":3,
"file":"module$node_modules$react_dnd$dist$internals$DropTargetMonitorImpl.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,kEAAA,CAAuF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG/HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,qBAAR,CAAgC,IAAK,EAErC,KAAIC,WAAaP,OAAA,CAAQ,qDAAR,CAEjB,KAAIQ,iBAAmB,CAAA,CAEvB,MAAMF,sBAAN,CACEG,gBAAgB,CAACC,QAAD,CAAW,CACzB,IAAKA,CAAAA,QAAL,CAAgBA,QADS,CAI3BC,YAAY,EAAG,CACb,MAAO,KAAKD,CAAAA,QADC,CAIfE,sBAAsB,CAACC,QAAD,CAAWC,OAAX,CAAoB,CACxC,MAAO,KAAKC,CAAAA,eAAgBH,CAAAA,sBAArB,CAA4CC,QAA5C;AAAsDC,OAAtD,CADiC,CAI1CE,OAAO,EAAG,CAIR,GAAI,CAAC,IAAKN,CAAAA,QAAV,CACE,MAAO,CAAA,CAGT,IAAIH,UAAWU,CAAAA,SAAf,EAA0B,CAACT,gBAA3B,CAA6C,uJAA7C,CAEA,IAAI,CAEF,MADAA,iBACO,CADY,CAAA,CACZ,CAAA,IAAKO,CAAAA,eAAgBG,CAAAA,eAArB,CAAqC,IAAKR,CAAAA,QAA1C,CAFL,CAAJ,OAGU,CACRF,gBAAA,CAAmB,CAAA,CADX,CAbF,CAkBVW,MAAM,CAACL,OAAD,CAAU,CACd,MAAK,KAAKJ,CAAAA,QAAV,CAIO,IAAKK,CAAAA,eAAgBK,CAAAA,YAArB,CAAkC,IAAKV,CAAAA,QAAvC,CAAiDI,OAAjD,CAJP,CACS,CAAA,CAFK,CAQhBO,WAAW,EAAG,CACZ,MAAO,KAAKN,CAAAA,eAAgBM,CAAAA,WAArB,EADK,CAIdC,OAAO,EAAG,CACR,MAAO,KAAKP,CAAAA,eAAgBO,CAAAA,OAArB,EADC,CAIVC,aAAa,EAAG,CACd,MAAO,KAAKR,CAAAA,eAAgBQ,CAAAA,aAArB,EADO,CAIhBC,OAAO,EAAG,CACR,MAAO,KAAKT,CAAAA,eAAgBS,CAAAA,OAArB,EADC,CAIVC,sBAAsB,EAAG,CACvB,MAAO,KAAKV,CAAAA,eAAgBU,CAAAA,sBAArB,EADgB,CAIzBC,4BAA4B,EAAG,CAC7B,MAAO,KAAKX,CAAAA,eAAgBW,CAAAA,4BAArB,EADsB,CAI/BC,qBAAqB,EAAG,CACtB,MAAO,KAAKZ,CAAAA,eAAgBY,CAAAA,qBAArB,EADe,CAIxBC,eAAe,EAAG,CAChB,MAAO,KAAKb,CAAAA,eAAgBa,CAAAA,eAArB,EADS,CAIlBC,8BAA8B,EAAG,CAC/B,MAAO,KAAKd,CAAAA,eAAgBc,CAAAA,8BAArB,EADwB,CAIjCC,WAAW,CAACC,OAAD,CAAU,CACnB,IAAKrB,CAAAA,QAAL;AAAgB,IAChB,KAAKK,CAAAA,eAAL,CAAuBgB,OAAQC,CAAAA,UAAR,EAFJ,CA3EvB,CAkFA9B,OAAQI,CAAAA,qBAAR,CAAgCA,qBA9F+F;",
"sources":["node_modules/react-dnd/dist/internals/DropTargetMonitorImpl.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_dnd$dist$internals$DropTargetMonitorImpl\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DropTargetMonitorImpl = void 0;\n\nvar _invariant = require(\"@react-dnd/invariant\");\n\nlet isCallingCanDrop = false;\n\nclass DropTargetMonitorImpl {\n  receiveHandlerId(targetId) {\n    this.targetId = targetId;\n  }\n\n  getHandlerId() {\n    return this.targetId;\n  }\n\n  subscribeToStateChange(listener, options) {\n    return this.internalMonitor.subscribeToStateChange(listener, options);\n  }\n\n  canDrop() {\n    // Cut out early if the target id has not been set. This should prevent errors\n    // where the user has an older version of dnd-core like in\n    // https://github.com/react-dnd/react-dnd/issues/1310\n    if (!this.targetId) {\n      return false;\n    }\n\n    (0, _invariant.invariant)(!isCallingCanDrop, 'You may not call monitor.canDrop() inside your canDrop() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor');\n\n    try {\n      isCallingCanDrop = true;\n      return this.internalMonitor.canDropOnTarget(this.targetId);\n    } finally {\n      isCallingCanDrop = false;\n    }\n  }\n\n  isOver(options) {\n    if (!this.targetId) {\n      return false;\n    }\n\n    return this.internalMonitor.isOverTarget(this.targetId, options);\n  }\n\n  getItemType() {\n    return this.internalMonitor.getItemType();\n  }\n\n  getItem() {\n    return this.internalMonitor.getItem();\n  }\n\n  getDropResult() {\n    return this.internalMonitor.getDropResult();\n  }\n\n  didDrop() {\n    return this.internalMonitor.didDrop();\n  }\n\n  getInitialClientOffset() {\n    return this.internalMonitor.getInitialClientOffset();\n  }\n\n  getInitialSourceClientOffset() {\n    return this.internalMonitor.getInitialSourceClientOffset();\n  }\n\n  getSourceClientOffset() {\n    return this.internalMonitor.getSourceClientOffset();\n  }\n\n  getClientOffset() {\n    return this.internalMonitor.getClientOffset();\n  }\n\n  getDifferenceFromInitialOffset() {\n    return this.internalMonitor.getDifferenceFromInitialOffset();\n  }\n\n  constructor(manager) {\n    this.targetId = null;\n    this.internalMonitor = manager.getMonitor();\n  }\n\n}\n\nexports.DropTargetMonitorImpl = DropTargetMonitorImpl;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","DropTargetMonitorImpl","_invariant","isCallingCanDrop","receiveHandlerId","targetId","getHandlerId","subscribeToStateChange","listener","options","internalMonitor","canDrop","invariant","canDropOnTarget","isOver","isOverTarget","getItemType","getItem","getDropResult","didDrop","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset","constructor","manager","getMonitor"]
}

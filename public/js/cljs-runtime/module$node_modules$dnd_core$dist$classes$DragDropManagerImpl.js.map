{
"version":3,
"file":"module$node_modules$dnd_core$dist$classes$DragDropManagerImpl.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,6DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG1HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,mBAAR,CAA8B,IAAK,EAEnC,KAAIC,OAASP,OAAA,CAAQ,0DAAR,CAEb,MAAMM,oBAAN,CACEE,cAAc,CAACC,OAAD,CAAU,CACtB,IAAKA,CAAAA,OAAL,CAAeA,OADO,CAIxBC,UAAU,EAAG,CACX,MAAO,KAAKC,CAAAA,OADD,CAIbC,UAAU,EAAG,CACX,MAAO,KAAKH,CAAAA,OADD,CAIbI,WAAW,EAAG,CACZ,MAAO,KAAKF,CAAAA,OAAQG,CAAAA,QADR,CAIdC,UAAU,EAAG,CAOXC,QAASA,kBAAiB,CAACC,aAAD,CAAgB,CACxC,MAAO,CAAC,GAAGC,IAAJ,CAAA;AAAa,CACZC,IAAAA,CAASF,aAAcG,CAAAA,KAAd,CAAoBC,OAApB,CAA6BH,IAA7B,CAEO,YAAtB,GAAI,MAAOC,KAAX,EACEG,QAAA,CAASH,IAAT,CAJgB,CADoB,CAL1C,MAAME,QAAU,IAAhB,CACM,CACJC,QADI,CAAA,CAEF,IAAKC,CAAAA,KAHT,CAeMC,QAAU,GAAIjB,MAAOkB,CAAAA,qBAAX,EAAkC,IAAlC,CAChB,OAAOtB,OAAOuB,CAAAA,IAAP,CAAYF,OAAZ,CAAqBG,CAAAA,MAArB,CAA4B,CAACC,YAAD,CAAeC,GAAf,CAAA,EAAuB,CAExDD,YAAA,CAAaC,GAAb,CAAA,CAAoBb,iBAAA,CADLQ,OAAAL,CAAQU,GAARV,CACK,CACpB,OAAOS,aAHiD,CAAnD,CAIJ,EAJI,CAlBI,CAyBbN,QAAQ,CAACH,MAAD,CAAS,CACf,IAAKI,CAAAA,KAAMD,CAAAA,QAAX,CAAoBH,MAApB,CADe,CAIjBW,WAAW,CAACP,KAAD,CAAQZ,OAAR,CAAiB,CAC1B,IAAKoB,CAAAA,OAAL,CAAe,CAAA,CAEf,KAAKC,CAAAA,oBAAL,CAA4B,EAAAC,EAAM,CAChC,MAAMC,YAA+C,CAA/CA,CAAc,IAAKX,CAAAA,KAAMY,CAAAA,QAAX,EAAsBC,CAAAA,QAEtC,KAAK3B,CAAAA,OAAT,GACMyB,WAAJ,EAAmB,CAAC,IAAKH,CAAAA,OAAzB;CACE,IAAKtB,CAAAA,OAAQ4B,CAAAA,KAAb,EACA,CAAA,IAAKN,CAAAA,OAAL,CAAe,CAAA,CAFjB,EAGW,CAACG,WAHZ,EAG2B,IAAKH,CAAAA,OAHhC,GAIE,IAAKtB,CAAAA,OAAQ6B,CAAAA,QAAb,EACA,CAAA,IAAKP,CAAAA,OAAL,CAAe,CAAA,CALjB,CADF,CAHgC,CAclC,KAAKR,CAAAA,KAAL,CAAaA,KACb,KAAKZ,CAAAA,OAAL,CAAeA,OACfY,MAAMgB,CAAAA,SAAN,CAAgB,IAAKP,CAAAA,oBAArB,CAnB0B,CA9C9B,CAsEA9B,OAAQI,CAAAA,mBAAR,CAA8BA,mBAhF4F;",
"sources":["node_modules/dnd-core/dist/classes/DragDropManagerImpl.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$dnd_core$dist$classes$DragDropManagerImpl\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DragDropManagerImpl = void 0;\n\nvar _index = require(\"../actions/dragDrop/index.js\");\n\nclass DragDropManagerImpl {\n  receiveBackend(backend) {\n    this.backend = backend;\n  }\n\n  getMonitor() {\n    return this.monitor;\n  }\n\n  getBackend() {\n    return this.backend;\n  }\n\n  getRegistry() {\n    return this.monitor.registry;\n  }\n\n  getActions() {\n    /* eslint-disable-next-line @typescript-eslint/no-this-alias */\n    const manager = this;\n    const {\n      dispatch\n    } = this.store;\n\n    function bindActionCreator(actionCreator) {\n      return (...args) => {\n        const action = actionCreator.apply(manager, args);\n\n        if (typeof action !== 'undefined') {\n          dispatch(action);\n        }\n      };\n    }\n\n    const actions = (0, _index.createDragDropActions)(this);\n    return Object.keys(actions).reduce((boundActions, key) => {\n      const action = actions[key];\n      boundActions[key] = bindActionCreator(action);\n      return boundActions;\n    }, {});\n  }\n\n  dispatch(action) {\n    this.store.dispatch(action);\n  }\n\n  constructor(store, monitor) {\n    this.isSetUp = false;\n\n    this.handleRefCountChange = () => {\n      const shouldSetUp = this.store.getState().refCount > 0;\n\n      if (this.backend) {\n        if (shouldSetUp && !this.isSetUp) {\n          this.backend.setup();\n          this.isSetUp = true;\n        } else if (!shouldSetUp && this.isSetUp) {\n          this.backend.teardown();\n          this.isSetUp = false;\n        }\n      }\n    };\n\n    this.store = store;\n    this.monitor = monitor;\n    store.subscribe(this.handleRefCountChange);\n  }\n\n}\n\nexports.DragDropManagerImpl = DragDropManagerImpl;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","DragDropManagerImpl","_index","receiveBackend","backend","getMonitor","monitor","getBackend","getRegistry","registry","getActions","bindActionCreator","actionCreator","args","action","apply","manager","dispatch","store","actions","createDragDropActions","keys","reduce","boundActions","key","constructor","isSetUp","handleRefCountChange","this.handleRefCountChange","shouldSetUp","getState","refCount","setup","teardown","subscribe"]
}

shadow$provide.module$node_modules$react_dnd_html5_backend$dist$NativeDragSources$nativeTypesConfig=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}Object.defineProperty(exports,"__esModule",{value:!0});exports.nativeTypesConfig=void 0;
global=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,
key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require("module$node_modules$react_dnd_html5_backend$dist$NativeTypes"));var _getDataFromDataTransfer=require("module$node_modules$react_dnd_html5_backend$dist$NativeDragSources$getDataFromDataTransfer");exports.nativeTypesConfig={[global.FILE]:{exposeProperties:{files:dataTransfer=>Array.prototype.slice.call(dataTransfer.files),
items:dataTransfer=>dataTransfer.items,dataTransfer:dataTransfer=>dataTransfer},matchesTypes:["Files"]},[global.HTML]:{exposeProperties:{html:(dataTransfer,matchesTypes)=>(0,_getDataFromDataTransfer.getDataFromDataTransfer)(dataTransfer,matchesTypes,""),dataTransfer:dataTransfer=>dataTransfer},matchesTypes:["Html","text/html"]},[global.URL]:{exposeProperties:{urls:(dataTransfer,matchesTypes)=>(0,_getDataFromDataTransfer.getDataFromDataTransfer)(dataTransfer,matchesTypes,"").split("\n"),dataTransfer:dataTransfer=>
dataTransfer},matchesTypes:["Url","text/uri-list"]},[global.TEXT]:{exposeProperties:{text:(dataTransfer,matchesTypes)=>(0,_getDataFromDataTransfer.getDataFromDataTransfer)(dataTransfer,matchesTypes,""),dataTransfer:dataTransfer=>dataTransfer},matchesTypes:["Text","text/plain"]}}}
//# sourceMappingURL=module$node_modules$react_dnd_html5_backend$dist$NativeDragSources$nativeTypesConfig.js.map

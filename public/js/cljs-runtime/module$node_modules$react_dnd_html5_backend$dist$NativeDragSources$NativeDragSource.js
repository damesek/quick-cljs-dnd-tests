shadow$provide.module$node_modules$react_dnd_html5_backend$dist$NativeDragSources$NativeDragSource=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.NativeDragSource=void 0;class NativeDragSource{initializeExposedProperties(){Object.keys(this.config.exposeProperties).forEach(property=>{Object.defineProperty(this.item,property,{configurable:!0,enumerable:!0,get(){console.warn(`Browser doesn't allow reading "${property}" until the drop event.`);return null}})})}loadDataTransfer(dataTransfer){if(dataTransfer){const newProperties=
{};Object.keys(this.config.exposeProperties).forEach(property=>{const propertyFn=this.config.exposeProperties[property];null!=propertyFn&&(newProperties[property]={value:propertyFn(dataTransfer,this.config.matchesTypes),configurable:!0,enumerable:!0})});Object.defineProperties(this.item,newProperties)}}canDrag(){return!0}beginDrag(){return this.item}isDragging(monitor,handle){return handle===monitor.getSourceId()}endDrag(){}constructor(config){this.config=config;this.item={};this.initializeExposedProperties()}}
exports.NativeDragSource=NativeDragSource}
//# sourceMappingURL=module$node_modules$react_dnd_html5_backend$dist$NativeDragSources$NativeDragSource.js.map

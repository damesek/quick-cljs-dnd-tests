{
"version":3,
"file":"module$node_modules$react_dnd_touch_backend$dist$TouchBackendImpl.js",
"lineCount":21,
"mappings":"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",
"sources":["node_modules/react-dnd-touch-backend/dist/TouchBackendImpl.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_dnd_touch_backend$dist$TouchBackendImpl\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TouchBackendImpl = void 0;\n\nvar _invariant = require(\"@react-dnd/invariant\");\n\nvar _interfaces = require(\"./interfaces.js\");\n\nvar _OptionsReader = require(\"./OptionsReader.js\");\n\nvar _math = require(\"./utils/math.js\");\n\nvar _offsets = require(\"./utils/offsets.js\");\n\nvar _predicates = require(\"./utils/predicates.js\");\n\nvar _supportsPassive = require(\"./utils/supportsPassive.js\");\n\nconst eventNames = {\n  [_interfaces.ListenerType.mouse]: {\n    start: 'mousedown',\n    move: 'mousemove',\n    end: 'mouseup',\n    contextmenu: 'contextmenu'\n  },\n  [_interfaces.ListenerType.touch]: {\n    start: 'touchstart',\n    move: 'touchmove',\n    end: 'touchend'\n  },\n  [_interfaces.ListenerType.keyboard]: {\n    keydown: 'keydown'\n  }\n};\n\nclass TouchBackendImpl {\n  /**\n  * Generate profiling statistics for the HTML5Backend.\n  */\n  profile() {\n    var ref;\n    return {\n      sourceNodes: this.sourceNodes.size,\n      sourcePreviewNodes: this.sourcePreviewNodes.size,\n      sourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n      targetNodes: this.targetNodes.size,\n      dragOverTargetIds: ((ref = this.dragOverTargetIds) === null || ref === void 0 ? void 0 : ref.length) || 0\n    };\n  } // public for test\n\n\n  get document() {\n    return this.options.document;\n  }\n\n  setup() {\n    const root = this.options.rootElement;\n\n    if (!root) {\n      return;\n    }\n\n    (0, _invariant.invariant)(!TouchBackendImpl.isSetUp, 'Cannot have two Touch backends at the same time.');\n    TouchBackendImpl.isSetUp = true;\n    this.addEventListener(root, 'start', this.getTopMoveStartHandler());\n    this.addEventListener(root, 'start', this.handleTopMoveStartCapture, true);\n    this.addEventListener(root, 'move', this.handleTopMove);\n    this.addEventListener(root, 'move', this.handleTopMoveCapture, true);\n    this.addEventListener(root, 'end', this.handleTopMoveEndCapture, true);\n\n    if (this.options.enableMouseEvents && !this.options.ignoreContextMenu) {\n      this.addEventListener(root, 'contextmenu', this.handleTopMoveEndCapture);\n    }\n\n    if (this.options.enableKeyboardEvents) {\n      this.addEventListener(root, 'keydown', this.handleCancelOnEscape, true);\n    }\n  }\n\n  teardown() {\n    const root = this.options.rootElement;\n\n    if (!root) {\n      return;\n    }\n\n    TouchBackendImpl.isSetUp = false;\n    this._mouseClientOffset = {};\n    this.removeEventListener(root, 'start', this.handleTopMoveStartCapture, true);\n    this.removeEventListener(root, 'start', this.handleTopMoveStart);\n    this.removeEventListener(root, 'move', this.handleTopMoveCapture, true);\n    this.removeEventListener(root, 'move', this.handleTopMove);\n    this.removeEventListener(root, 'end', this.handleTopMoveEndCapture, true);\n\n    if (this.options.enableMouseEvents && !this.options.ignoreContextMenu) {\n      this.removeEventListener(root, 'contextmenu', this.handleTopMoveEndCapture);\n    }\n\n    if (this.options.enableKeyboardEvents) {\n      this.removeEventListener(root, 'keydown', this.handleCancelOnEscape, true);\n    }\n\n    this.uninstallSourceNodeRemovalObserver();\n  }\n\n  addEventListener(subject, event, handler, capture = false) {\n    const options = _supportsPassive.supportsPassive ? {\n      capture,\n      passive: false\n    } : capture;\n    this.listenerTypes.forEach(function (listenerType) {\n      const evt = eventNames[listenerType][event];\n\n      if (evt) {\n        subject.addEventListener(evt, handler, options);\n      }\n    });\n  }\n\n  removeEventListener(subject, event, handler, capture = false) {\n    const options = _supportsPassive.supportsPassive ? {\n      capture,\n      passive: false\n    } : capture;\n    this.listenerTypes.forEach(function (listenerType) {\n      const evt = eventNames[listenerType][event];\n\n      if (evt) {\n        subject.removeEventListener(evt, handler, options);\n      }\n    });\n  }\n\n  connectDragSource(sourceId, node) {\n    const handleMoveStart = this.handleMoveStart.bind(this, sourceId);\n    this.sourceNodes.set(sourceId, node);\n    this.addEventListener(node, 'start', handleMoveStart);\n    return () => {\n      this.sourceNodes.delete(sourceId);\n      this.removeEventListener(node, 'start', handleMoveStart);\n    };\n  }\n\n  connectDragPreview(sourceId, node, options) {\n    this.sourcePreviewNodeOptions.set(sourceId, options);\n    this.sourcePreviewNodes.set(sourceId, node);\n    return () => {\n      this.sourcePreviewNodes.delete(sourceId);\n      this.sourcePreviewNodeOptions.delete(sourceId);\n    };\n  }\n\n  connectDropTarget(targetId, node) {\n    const root = this.options.rootElement;\n\n    if (!this.document || !root) {\n      return () => {\n        /* noop */\n      };\n    }\n\n    const handleMove = e => {\n      if (!this.document || !root || !this.monitor.isDragging()) {\n        return;\n      }\n\n      let coords;\n      /**\n      * Grab the coordinates for the current mouse/touch position\n      */\n\n      switch (e.type) {\n        case eventNames.mouse.move:\n          coords = {\n            x: e.clientX,\n            y: e.clientY\n          };\n          break;\n\n        case eventNames.touch.move:\n          var ref, ref1;\n          coords = {\n            x: ((ref = e.touches[0]) === null || ref === void 0 ? void 0 : ref.clientX) || 0,\n            y: ((ref1 = e.touches[0]) === null || ref1 === void 0 ? void 0 : ref1.clientY) || 0\n          };\n          break;\n      }\n      /**\n      * Use the coordinates to grab the element the drag ended on.\n      * If the element is the same as the target node (or any of it's children) then we have hit a drop target and can handle the move.\n      */\n\n\n      const droppedOn = coords != null ? this.document.elementFromPoint(coords.x, coords.y) : undefined;\n      const childMatch = droppedOn && node.contains(droppedOn);\n\n      if (droppedOn === node || childMatch) {\n        return this.handleMove(e, targetId);\n      }\n    };\n    /**\n    * Attaching the event listener to the body so that touchmove will work while dragging over multiple target elements.\n    */\n\n\n    this.addEventListener(this.document.body, 'move', handleMove);\n    this.targetNodes.set(targetId, node);\n    return () => {\n      if (this.document) {\n        this.targetNodes.delete(targetId);\n        this.removeEventListener(this.document.body, 'move', handleMove);\n      }\n    };\n  }\n\n  getTopMoveStartHandler() {\n    if (!this.options.delayTouchStart && !this.options.delayMouseStart) {\n      return this.handleTopMoveStart;\n    }\n\n    return this.handleTopMoveStartDelay;\n  }\n\n  installSourceNodeRemovalObserver(node) {\n    this.uninstallSourceNodeRemovalObserver();\n    this.draggedSourceNode = node;\n    this.draggedSourceNodeRemovalObserver = new MutationObserver(() => {\n      if (node && !node.parentElement) {\n        this.resurrectSourceNode();\n        this.uninstallSourceNodeRemovalObserver();\n      }\n    });\n\n    if (!node || !node.parentElement) {\n      return;\n    }\n\n    this.draggedSourceNodeRemovalObserver.observe(node.parentElement, {\n      childList: true\n    });\n  }\n\n  resurrectSourceNode() {\n    if (this.document && this.draggedSourceNode) {\n      this.draggedSourceNode.style.display = 'none';\n      this.draggedSourceNode.removeAttribute('data-reactid');\n      this.document.body.appendChild(this.draggedSourceNode);\n    }\n  }\n\n  uninstallSourceNodeRemovalObserver() {\n    if (this.draggedSourceNodeRemovalObserver) {\n      this.draggedSourceNodeRemovalObserver.disconnect();\n    }\n\n    this.draggedSourceNodeRemovalObserver = undefined;\n    this.draggedSourceNode = undefined;\n  }\n\n  constructor(manager, context, options) {\n    this.getSourceClientOffset = sourceId => {\n      const element = this.sourceNodes.get(sourceId);\n      return element && (0, _offsets.getNodeClientOffset)(element);\n    };\n\n    this.handleTopMoveStartCapture = e => {\n      if (!(0, _predicates.eventShouldStartDrag)(e)) {\n        return;\n      }\n\n      this.moveStartSourceIds = [];\n    };\n\n    this.handleMoveStart = sourceId => {\n      // Just because we received an event doesn't necessarily mean we need to collect drag sources.\n      // We only collect start collecting drag sources on touch and left mouse events.\n      if (Array.isArray(this.moveStartSourceIds)) {\n        this.moveStartSourceIds.unshift(sourceId);\n      }\n    };\n\n    this.handleTopMoveStart = e => {\n      if (!(0, _predicates.eventShouldStartDrag)(e)) {\n        return;\n      } // Don't prematurely preventDefault() here since it might:\n      // 1. Mess up scrolling\n      // 2. Mess up long tap (which brings up context menu)\n      // 3. If there's an anchor link as a child, tap won't be triggered on link\n\n\n      const clientOffset = (0, _offsets.getEventClientOffset)(e);\n\n      if (clientOffset) {\n        if ((0, _predicates.isTouchEvent)(e)) {\n          this.lastTargetTouchFallback = e.targetTouches[0];\n        }\n\n        this._mouseClientOffset = clientOffset;\n      }\n\n      this.waitingForDelay = false;\n    };\n\n    this.handleTopMoveStartDelay = e => {\n      if (!(0, _predicates.eventShouldStartDrag)(e)) {\n        return;\n      }\n\n      const delay = e.type === eventNames.touch.start ? this.options.delayTouchStart : this.options.delayMouseStart;\n      this.timeout = setTimeout(this.handleTopMoveStart.bind(this, e), delay);\n      this.waitingForDelay = true;\n    };\n\n    this.handleTopMoveCapture = () => {\n      this.dragOverTargetIds = [];\n    };\n\n    this.handleMove = (_evt, targetId) => {\n      if (this.dragOverTargetIds) {\n        this.dragOverTargetIds.unshift(targetId);\n      }\n    };\n\n    this.handleTopMove = e1 => {\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n      }\n\n      if (!this.document || this.waitingForDelay) {\n        return;\n      }\n\n      const {\n        moveStartSourceIds,\n        dragOverTargetIds\n      } = this;\n      const enableHoverOutsideTarget = this.options.enableHoverOutsideTarget;\n      const clientOffset = (0, _offsets.getEventClientOffset)(e1, this.lastTargetTouchFallback);\n\n      if (!clientOffset) {\n        return;\n      } // If the touch move started as a scroll, or is is between the scroll angles\n\n\n      if (this._isScrolling || !this.monitor.isDragging() && (0, _math.inAngleRanges)(this._mouseClientOffset.x || 0, this._mouseClientOffset.y || 0, clientOffset.x, clientOffset.y, this.options.scrollAngleRanges)) {\n        this._isScrolling = true;\n        return;\n      } // If we're not dragging and we've moved a little, that counts as a drag start\n\n\n      if (!this.monitor.isDragging() && // eslint-disable-next-line no-prototype-builtins\n      this._mouseClientOffset.hasOwnProperty('x') && moveStartSourceIds && (0, _math.distance)(this._mouseClientOffset.x || 0, this._mouseClientOffset.y || 0, clientOffset.x, clientOffset.y) > (this.options.touchSlop ? this.options.touchSlop : 0)) {\n        this.moveStartSourceIds = undefined;\n        this.actions.beginDrag(moveStartSourceIds, {\n          clientOffset: this._mouseClientOffset,\n          getSourceClientOffset: this.getSourceClientOffset,\n          publishSource: false\n        });\n      }\n\n      if (!this.monitor.isDragging()) {\n        return;\n      }\n\n      const sourceNode = this.sourceNodes.get(this.monitor.getSourceId());\n      this.installSourceNodeRemovalObserver(sourceNode);\n      this.actions.publishDragSource();\n      if (e1.cancelable) e1.preventDefault(); // Get the node elements of the hovered DropTargets\n\n      const dragOverTargetNodes = (dragOverTargetIds || []).map(key => this.targetNodes.get(key)).filter(e => !!e); // Get the a ordered list of nodes that are touched by\n\n      const elementsAtPoint = this.options.getDropTargetElementsAtPoint ? this.options.getDropTargetElementsAtPoint(clientOffset.x, clientOffset.y, dragOverTargetNodes) : this.document.elementsFromPoint(clientOffset.x, clientOffset.y); // Extend list with parents that are not receiving elementsFromPoint events (size 0 elements and svg groups)\n\n      const elementsAtPointExtended = [];\n\n      for (const nodeId in elementsAtPoint) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (!elementsAtPoint.hasOwnProperty(nodeId)) {\n          continue;\n        }\n\n        let currentNode = elementsAtPoint[nodeId];\n\n        if (currentNode != null) {\n          elementsAtPointExtended.push(currentNode);\n        }\n\n        while (currentNode) {\n          currentNode = currentNode.parentElement;\n\n          if (currentNode && elementsAtPointExtended.indexOf(currentNode) === -1) {\n            elementsAtPointExtended.push(currentNode);\n          }\n        }\n      }\n\n      const orderedDragOverTargetIds = elementsAtPointExtended // Filter off nodes that arent a hovered DropTargets nodes\n      .filter(node => dragOverTargetNodes.indexOf(node) > -1) // Map back the nodes elements to targetIds\n      .map(node => this._getDropTargetId(node)) // Filter off possible null rows\n      .filter(node => !!node).filter((id, index, ids) => ids.indexOf(id) === index); // Invoke hover for drop targets when source node is still over and pointer is outside\n\n      if (enableHoverOutsideTarget) {\n        for (const targetId in this.targetNodes) {\n          const targetNode = this.targetNodes.get(targetId);\n\n          if (sourceNode && targetNode && targetNode.contains(sourceNode) && orderedDragOverTargetIds.indexOf(targetId) === -1) {\n            orderedDragOverTargetIds.unshift(targetId);\n            break;\n          }\n        }\n      } // Reverse order because dnd-core reverse it before calling the DropTarget drop methods\n\n\n      orderedDragOverTargetIds.reverse();\n      this.actions.hover(orderedDragOverTargetIds, {\n        clientOffset: clientOffset\n      });\n    };\n    /**\n    *\n    * visible for testing\n    */\n\n\n    this._getDropTargetId = node => {\n      const keys = this.targetNodes.keys();\n      let next = keys.next();\n\n      while (next.done === false) {\n        const targetId = next.value;\n\n        if (node === this.targetNodes.get(targetId)) {\n          return targetId;\n        } else {\n          next = keys.next();\n        }\n      }\n\n      return undefined;\n    };\n\n    this.handleTopMoveEndCapture = e => {\n      this._isScrolling = false;\n      this.lastTargetTouchFallback = undefined;\n\n      if (!(0, _predicates.eventShouldEndDrag)(e)) {\n        return;\n      }\n\n      if (!this.monitor.isDragging() || this.monitor.didDrop()) {\n        this.moveStartSourceIds = undefined;\n        return;\n      }\n\n      if (e.cancelable) e.preventDefault();\n      this._mouseClientOffset = {};\n      this.uninstallSourceNodeRemovalObserver();\n      this.actions.drop();\n      this.actions.endDrag();\n    };\n\n    this.handleCancelOnEscape = e => {\n      if (e.key === 'Escape' && this.monitor.isDragging()) {\n        this._mouseClientOffset = {};\n        this.uninstallSourceNodeRemovalObserver();\n        this.actions.endDrag();\n      }\n    };\n\n    this.options = new _OptionsReader.OptionsReader(options, context);\n    this.actions = manager.getActions();\n    this.monitor = manager.getMonitor();\n    this.sourceNodes = new Map();\n    this.sourcePreviewNodes = new Map();\n    this.sourcePreviewNodeOptions = new Map();\n    this.targetNodes = new Map();\n    this.listenerTypes = [];\n    this._mouseClientOffset = {};\n    this._isScrolling = false;\n\n    if (this.options.enableMouseEvents) {\n      this.listenerTypes.push(_interfaces.ListenerType.mouse);\n    }\n\n    if (this.options.enableTouchEvents) {\n      this.listenerTypes.push(_interfaces.ListenerType.touch);\n    }\n\n    if (this.options.enableKeyboardEvents) {\n      this.listenerTypes.push(_interfaces.ListenerType.keyboard);\n    }\n  }\n\n}\n\nexports.TouchBackendImpl = TouchBackendImpl;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","TouchBackendImpl","_invariant","_interfaces","_OptionsReader","_math","_offsets","_predicates","_supportsPassive","eventNames","ListenerType","mouse","start","move","end","contextmenu","touch","keyboard","keydown","profile","ref","sourceNodes","size","sourcePreviewNodes","sourcePreviewNodeOptions","targetNodes","dragOverTargetIds","length","options","document","setup","root","rootElement","invariant","isSetUp","addEventListener","getTopMoveStartHandler","handleTopMoveStartCapture","handleTopMove","handleTopMoveCapture","handleTopMoveEndCapture","enableMouseEvents","ignoreContextMenu","enableKeyboardEvents","handleCancelOnEscape","teardown","_mouseClientOffset","removeEventListener","handleTopMoveStart","uninstallSourceNodeRemovalObserver","subject","event","handler","capture","supportsPassive","passive","listenerTypes","forEach","listenerType","evt","connectDragSource","sourceId","node","handleMoveStart","bind","set","delete","connectDragPreview","connectDropTarget","targetId","handleMove","e","monitor","isDragging","type","coords","x","clientX","y","clientY","ref1","touches","childMatch","droppedOn","elementFromPoint","undefined","contains","body","delayTouchStart","delayMouseStart","handleTopMoveStartDelay","installSourceNodeRemovalObserver","draggedSourceNode","draggedSourceNodeRemovalObserver","MutationObserver","parentElement","resurrectSourceNode","observe","childList","style","display","removeAttribute","appendChild","disconnect","constructor","manager","context","getSourceClientOffset","this.getSourceClientOffset","element","get","getNodeClientOffset","this.handleTopMoveStartCapture","eventShouldStartDrag","moveStartSourceIds","this.handleMoveStart","Array","isArray","unshift","this.handleTopMoveStart","clientOffset","getEventClientOffset","isTouchEvent","lastTargetTouchFallback","targetTouches","waitingForDelay","this.handleTopMoveStartDelay","delay","timeout","setTimeout","this.handleTopMoveCapture","_evt","this.handleMove","e1","this.handleTopMove","clearTimeout","enableHoverOutsideTarget","_isScrolling","inAngleRanges","scrollAngleRanges","hasOwnProperty","distance","touchSlop","actions","beginDrag","publishSource","sourceNode","getSourceId","publishDragSource","cancelable","preventDefault","dragOverTargetNodes","map","key","filter","elementsAtPoint","getDropTargetElementsAtPoint","elementsFromPoint","elementsAtPointExtended","nodeId","currentNode","push","indexOf","orderedDragOverTargetIds","_getDropTargetId","id","index","ids","targetNode","reverse","hover","this._getDropTargetId","keys","next","done","this.handleTopMoveEndCapture","eventShouldEndDrag","didDrop","drop","endDrag","this.handleCancelOnEscape","OptionsReader","getActions","getMonitor","Map","enableTouchEvents"]
}

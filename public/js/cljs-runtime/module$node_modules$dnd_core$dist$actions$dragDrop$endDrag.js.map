{
"version":3,
"file":"module$node_modules$dnd_core$dist$actions$dragDrop$endDrag.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,0DAAA,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGvHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,aAAR,CAMAA,QAAsB,CAACC,OAAD,CAAU,CAC9B,MAAOC,SAAgB,EAAG,CACxB,MAAMC,QAAUF,OAAQG,CAAAA,UAAR,EAAhB,CACMC,SAAWJ,OAAQK,CAAAA,WAAR,EAiBnB,IAAIC,UAAWC,CAAAA,SAAf,EAhBmBL,OAgBeM,CAAAA,UAAR,EAA1B,CAAgD,yCAAhD,CAfE,OAAMC,SAAWP,OAAQQ,CAAAA,WAAR,EAED,KAAhB,EAAID,QAAJ,GACiBL,QAASO,CAAAA,SAATC,CAAmBH,QAAnBG,CAA6B,CAAA,CAA7BA,CACRX,CAAAA,OAAP,CAAeC,OAAf,CAAwBO,QAAxB,CACA,CAAAL,QAASS,CAAAA,WAAT,EAHF,CAMA;MAAO,CACLC,KAAMC,MAAOC,CAAAA,QADR,CAZiB,CADI,CAJhC,KAAIV,WAAab,OAAA,CAAQ,qDAAR,CAAjB,CAEIsB,OAAStB,OAAA,CAAQ,0DAAR,CAV0G;",
"sources":["node_modules/dnd-core/dist/actions/dragDrop/endDrag.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$dnd_core$dist$actions$dragDrop$endDrag\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createEndDrag = createEndDrag;\n\nvar _invariant = require(\"@react-dnd/invariant\");\n\nvar _types = require(\"./types.js\");\n\nfunction createEndDrag(manager) {\n  return function endDrag() {\n    const monitor = manager.getMonitor();\n    const registry = manager.getRegistry();\n    verifyIsDragging(monitor);\n    const sourceId = monitor.getSourceId();\n\n    if (sourceId != null) {\n      const source = registry.getSource(sourceId, true);\n      source.endDrag(monitor, sourceId);\n      registry.unpinSource();\n    }\n\n    return {\n      type: _types.END_DRAG\n    };\n  };\n}\n\nfunction verifyIsDragging(monitor) {\n  (0, _invariant.invariant)(monitor.isDragging(), 'Cannot call endDrag while not dragging.');\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createEndDrag","manager","endDrag","monitor","getMonitor","registry","getRegistry","_invariant","invariant","isDragging","sourceId","getSourceId","getSource","source","unpinSource","type","_types","END_DRAG"]
}

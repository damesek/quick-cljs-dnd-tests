shadow$provide.module$node_modules$react_dnd$dist$internals$SourceConnector=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.SourceConnector=void 0;var _shallowequal=require("module$node_modules$$react_dnd$shallowequal$dist$index"),_isRef=require("module$node_modules$react_dnd$dist$internals$isRef"),_wrapConnectorHooks=require("module$node_modules$react_dnd$dist$internals$wrapConnectorHooks");class SourceConnector{receiveHandlerId(newHandlerId){this.handlerId!==
newHandlerId&&(this.handlerId=newHandlerId,this.reconnect())}get connectTarget(){return this.dragSource}get dragSourceOptions(){return this.dragSourceOptionsInternal}set dragSourceOptions(options){this.dragSourceOptionsInternal=options}get dragPreviewOptions(){return this.dragPreviewOptionsInternal}set dragPreviewOptions(options){this.dragPreviewOptionsInternal=options}reconnect(){const didChange=this.reconnectDragSource();this.reconnectDragPreview(didChange)}reconnectDragSource(){const dragSource=
this.dragSource,didChange=this.didHandlerIdChange()||this.didConnectedDragSourceChange()||this.didDragSourceOptionsChange();didChange&&this.disconnectDragSource();if(!this.handlerId)return didChange;if(!dragSource)return this.lastConnectedDragSource=dragSource,didChange;didChange&&(this.lastConnectedHandlerId=this.handlerId,this.lastConnectedDragSource=dragSource,this.lastConnectedDragSourceOptions=this.dragSourceOptions,this.dragSourceUnsubscribe=this.backend.connectDragSource(this.handlerId,dragSource,
this.dragSourceOptions));return didChange}reconnectDragPreview(forceDidChange=!1){const dragPreview=this.dragPreview;(forceDidChange=forceDidChange||this.didHandlerIdChange()||this.didConnectedDragPreviewChange()||this.didDragPreviewOptionsChange())&&this.disconnectDragPreview();this.handlerId&&(dragPreview?forceDidChange&&(this.lastConnectedHandlerId=this.handlerId,this.lastConnectedDragPreview=dragPreview,this.lastConnectedDragPreviewOptions=this.dragPreviewOptions,this.dragPreviewUnsubscribe=this.backend.connectDragPreview(this.handlerId,
dragPreview,this.dragPreviewOptions)):this.lastConnectedDragPreview=dragPreview)}didHandlerIdChange(){return this.lastConnectedHandlerId!==this.handlerId}didConnectedDragSourceChange(){return this.lastConnectedDragSource!==this.dragSource}didConnectedDragPreviewChange(){return this.lastConnectedDragPreview!==this.dragPreview}didDragSourceOptionsChange(){return!(0,_shallowequal.shallowEqual)(this.lastConnectedDragSourceOptions,this.dragSourceOptions)}didDragPreviewOptionsChange(){return!(0,_shallowequal.shallowEqual)(this.lastConnectedDragPreviewOptions,
this.dragPreviewOptions)}disconnectDragSource(){this.dragSourceUnsubscribe&&(this.dragSourceUnsubscribe(),this.dragSourceUnsubscribe=void 0)}disconnectDragPreview(){this.dragPreviewUnsubscribe&&(this.dragPreviewUnsubscribe(),this.dragPreviewUnsubscribe=void 0,this.dragPreviewRef=this.dragPreviewNode=null)}get dragSource(){return this.dragSourceNode||this.dragSourceRef&&this.dragSourceRef.current}get dragPreview(){return this.dragPreviewNode||this.dragPreviewRef&&this.dragPreviewRef.current}clearDragSource(){this.dragSourceRef=
this.dragSourceNode=null}clearDragPreview(){this.dragPreviewRef=this.dragPreviewNode=null}constructor(backend){this.hooks=(0,_wrapConnectorHooks.wrapConnectorHooks)({dragSource:(node,options)=>{this.clearDragSource();this.dragSourceOptions=options||null;(0,_isRef.isRef)(node)?this.dragSourceRef=node:this.dragSourceNode=node;this.reconnectDragSource()},dragPreview:(node,options)=>{this.clearDragPreview();this.dragPreviewOptions=options||null;(0,_isRef.isRef)(node)?this.dragPreviewRef=node:this.dragPreviewNode=
node;this.reconnectDragPreview()}});this.lastConnectedDragPreviewOptions=this.lastConnectedDragPreview=this.lastConnectedDragSourceOptions=this.lastConnectedDragSource=this.lastConnectedHandlerId=this.dragPreviewOptionsInternal=this.dragPreviewRef=this.dragSourceOptionsInternal=this.dragSourceRef=this.handlerId=null;this.backend=backend}}exports.SourceConnector=SourceConnector}
//# sourceMappingURL=module$node_modules$react_dnd$dist$internals$SourceConnector.js.map

shadow$provide.module$node_modules$react_dnd$dist$core$DndProvider=function(global,require,module,exports){function _objectWithoutProperties(source,excluded){if(null==source)return{};if(null==source)var target={};else{target={};var sourceKeys=Object.keys(source),i;for(i=0;i<sourceKeys.length;i++){var key=sourceKeys[i];0<=excluded.indexOf(key)||(target[key]=source[key])}}if(Object.getOwnPropertySymbols)for(i=Object.getOwnPropertySymbols(source),key=0;key<i.length;key++)sourceKeys=i[key],0<=excluded.indexOf(sourceKeys)||
Object.prototype.propertyIsEnumerable.call(source,sourceKeys)&&(target[sourceKeys]=source[sourceKeys]);return target}function getDndContextValue(props){return"manager"in props?[{dragDropManager:props.manager},!1]:[createSingletonDndContext(props.backend,props.context,props.options,props.debugMode),!props.context]}function createSingletonDndContext(backend,context="undefined"!==typeof global?global:window,options,debugMode){context[INSTANCE_SYM]||(context[INSTANCE_SYM]={dragDropManager:(0,_dndCore.createDragDropManager)(backend,
context,options,debugMode)});return context[INSTANCE_SYM]}Object.defineProperty(exports,"__esModule",{value:!0});exports.DndProvider=void 0;var _jsxRuntime=require("module$node_modules$react$jsx_runtime"),_dndCore=require("module$node_modules$dnd_core$dist$index"),_react=require("module$node_modules$react$index"),_DndContext=require("module$node_modules$react_dnd$dist$core$DndContext");let refCount=0;const INSTANCE_SYM=Symbol.for("__REACT_DND_CONTEXT_INSTANCE__");require=(0,_react.memo)(function(_param){var {children}=
_param;_param=_objectWithoutProperties(_param,["children"]);const [manager,isGlobalInstance]=getDndContextValue(_param);(0,_react.useEffect)(()=>{if(isGlobalInstance){const context="undefined"!==typeof global?global:window;++refCount;return()=>{0===--refCount&&(context[INSTANCE_SYM]=null)}}},[]);return(0,_jsxRuntime.jsx)(_DndContext.DndContext.Provider,{value:manager,children})});exports.DndProvider=require}
//# sourceMappingURL=module$node_modules$react_dnd$dist$core$DndProvider.js.map

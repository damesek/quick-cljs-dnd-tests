{
"version":3,
"file":"module$node_modules$dnd_core$dist$contracts.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,2CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAwBxGC,QAASA,aAAY,CAACC,IAAD,CAAOC,UAAP,CAAmB,CAClCA,UAAJ,EAAkBC,KAAMC,CAAAA,OAAN,CAAcH,IAAd,CAAlB,CACEA,IAAKI,CAAAA,OAAL,CAAaC,CAAA,EAAKN,YAAA,CAAaM,CAAb,CAAgB,CAAA,CAAhB,CAAlB,CADF,CAKA,GAAIC,UAAWC,CAAAA,SAAf,EAA0C,QAA1C,GAA0B,MAAOP,KAAjC,EAAsE,QAAtE,GAAsD,MAAOA,KAA7D,CAAgFC,UAAA,CAAa,6DAAb,CAA6E,wCAA7J,CANsC,CArBxCO,MAAOC,CAAAA,cAAP,CAAsBX,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CY,MAAO,CAAA,CADoC,CAA7C,CAGAZ,QAAQa,CAAAA,sBAAR,CAMAA,QAA+B,CAACC,MAAD,CAAS,CACtC,GAAIN,UAAWC,CAAAA,SAAf,EAAoD,UAApD;AAA0B,MAAOK,OAAOC,CAAAA,OAAxC,CAAgE,oCAAhE,CACA,IAAIP,UAAWC,CAAAA,SAAf,EAAsD,UAAtD,GAA0B,MAAOK,OAAOE,CAAAA,SAAxC,CAAkE,sCAAlE,CACA,IAAIR,UAAWC,CAAAA,SAAf,EAAoD,UAApD,GAA0B,MAAOK,OAAOG,CAAAA,OAAxC,CAAgE,oCAAhE,CAHsC,CALxCjB,QAAQkB,CAAAA,sBAAR,CAWAA,QAA+B,CAACC,MAAD,CAAS,CACtC,GAAIX,UAAWC,CAAAA,SAAf,EAAoD,UAApD,GAA0B,MAAOU,OAAOC,CAAAA,OAAxC,CAAgE,oCAAhE,CACA,IAAIZ,UAAWC,CAAAA,SAAf,EAAkD,UAAlD,GAA0B,MAAOU,OAAOE,CAAAA,KAAxC,CAA8D,kCAA9D,CACA;GAAIb,UAAWC,CAAAA,SAAf,EAAiD,UAAjD,GAA0B,MAAOU,OAAOG,CAAAA,IAAxC,CAA6D,sCAA7D,CAHsC,CAVxCtB,QAAQC,CAAAA,YAAR,CAAuBA,YAEvB,KAAIO,WAAaV,OAAA,CAAQ,qDAAR,CAVuF;",
"sources":["node_modules/dnd-core/dist/contracts.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$dnd_core$dist$contracts\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateSourceContract = validateSourceContract;\nexports.validateTargetContract = validateTargetContract;\nexports.validateType = validateType;\n\nvar _invariant = require(\"@react-dnd/invariant\");\n\nfunction validateSourceContract(source) {\n  (0, _invariant.invariant)(typeof source.canDrag === 'function', 'Expected canDrag to be a function.');\n  (0, _invariant.invariant)(typeof source.beginDrag === 'function', 'Expected beginDrag to be a function.');\n  (0, _invariant.invariant)(typeof source.endDrag === 'function', 'Expected endDrag to be a function.');\n}\n\nfunction validateTargetContract(target) {\n  (0, _invariant.invariant)(typeof target.canDrop === 'function', 'Expected canDrop to be a function.');\n  (0, _invariant.invariant)(typeof target.hover === 'function', 'Expected hover to be a function.');\n  (0, _invariant.invariant)(typeof target.drop === 'function', 'Expected beginDrag to be a function.');\n}\n\nfunction validateType(type, allowArray) {\n  if (allowArray && Array.isArray(type)) {\n    type.forEach(t => validateType(t, false));\n    return;\n  }\n\n  (0, _invariant.invariant)(typeof type === 'string' || typeof type === 'symbol', allowArray ? 'Type can only be a string, a symbol, or an array of either.' : 'Type can only be a string or a symbol.');\n}\n};"],
"names":["shadow$provide","global","require","module","exports","validateType","type","allowArray","Array","isArray","forEach","t","_invariant","invariant","Object","defineProperty","value","validateSourceContract","source","canDrag","beginDrag","endDrag","validateTargetContract","target","canDrop","hover","drop"]
}

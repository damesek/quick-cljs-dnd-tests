{
"version":3,
"file":"module$node_modules$dnd_core$dist$classes$HandlerRegistryImpl.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/dnd-core/dist/classes/HandlerRegistryImpl.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$dnd_core$dist$classes$HandlerRegistryImpl\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HandlerRegistryImpl = void 0;\n\nvar _asap = require(\"@react-dnd/asap\");\n\nvar _invariant = require(\"@react-dnd/invariant\");\n\nvar _registry = require(\"../actions/registry.js\");\n\nvar _contracts = require(\"../contracts.js\");\n\nvar _interfaces = require(\"../interfaces.js\");\n\nvar _getNextUniqueId = require(\"../utils/getNextUniqueId.js\");\n\nfunction getNextHandlerId(role) {\n  const id = (0, _getNextUniqueId.getNextUniqueId)().toString();\n\n  switch (role) {\n    case _interfaces.HandlerRole.SOURCE:\n      return `S${id}`;\n\n    case _interfaces.HandlerRole.TARGET:\n      return `T${id}`;\n\n    default:\n      throw new Error(`Unknown Handler Role: ${role}`);\n  }\n}\n\nfunction parseRoleFromHandlerId(handlerId) {\n  switch (handlerId[0]) {\n    case 'S':\n      return _interfaces.HandlerRole.SOURCE;\n\n    case 'T':\n      return _interfaces.HandlerRole.TARGET;\n\n    default:\n      throw new Error(`Cannot parse handler ID: ${handlerId}`);\n  }\n}\n\nfunction mapContainsValue(map, searchValue) {\n  const entries = map.entries();\n  let isDone = false;\n\n  do {\n    const {\n      done,\n      value: [, value]\n    } = entries.next();\n\n    if (value === searchValue) {\n      return true;\n    }\n\n    isDone = !!done;\n  } while (!isDone);\n\n  return false;\n}\n\nclass HandlerRegistryImpl {\n  addSource(type, source) {\n    (0, _contracts.validateType)(type);\n    (0, _contracts.validateSourceContract)(source);\n    const sourceId = this.addHandler(_interfaces.HandlerRole.SOURCE, type, source);\n    this.store.dispatch((0, _registry.addSource)(sourceId));\n    return sourceId;\n  }\n\n  addTarget(type, target) {\n    (0, _contracts.validateType)(type, true);\n    (0, _contracts.validateTargetContract)(target);\n    const targetId = this.addHandler(_interfaces.HandlerRole.TARGET, type, target);\n    this.store.dispatch((0, _registry.addTarget)(targetId));\n    return targetId;\n  }\n\n  containsHandler(handler) {\n    return mapContainsValue(this.dragSources, handler) || mapContainsValue(this.dropTargets, handler);\n  }\n\n  getSource(sourceId, includePinned = false) {\n    (0, _invariant.invariant)(this.isSourceId(sourceId), 'Expected a valid source ID.');\n    const isPinned = includePinned && sourceId === this.pinnedSourceId;\n    const source = isPinned ? this.pinnedSource : this.dragSources.get(sourceId);\n    return source;\n  }\n\n  getTarget(targetId) {\n    (0, _invariant.invariant)(this.isTargetId(targetId), 'Expected a valid target ID.');\n    return this.dropTargets.get(targetId);\n  }\n\n  getSourceType(sourceId) {\n    (0, _invariant.invariant)(this.isSourceId(sourceId), 'Expected a valid source ID.');\n    return this.types.get(sourceId);\n  }\n\n  getTargetType(targetId) {\n    (0, _invariant.invariant)(this.isTargetId(targetId), 'Expected a valid target ID.');\n    return this.types.get(targetId);\n  }\n\n  isSourceId(handlerId) {\n    const role = parseRoleFromHandlerId(handlerId);\n    return role === _interfaces.HandlerRole.SOURCE;\n  }\n\n  isTargetId(handlerId) {\n    const role = parseRoleFromHandlerId(handlerId);\n    return role === _interfaces.HandlerRole.TARGET;\n  }\n\n  removeSource(sourceId) {\n    (0, _invariant.invariant)(this.getSource(sourceId), 'Expected an existing source.');\n    this.store.dispatch((0, _registry.removeSource)(sourceId));\n    (0, _asap.asap)(() => {\n      this.dragSources.delete(sourceId);\n      this.types.delete(sourceId);\n    });\n  }\n\n  removeTarget(targetId) {\n    (0, _invariant.invariant)(this.getTarget(targetId), 'Expected an existing target.');\n    this.store.dispatch((0, _registry.removeTarget)(targetId));\n    this.dropTargets.delete(targetId);\n    this.types.delete(targetId);\n  }\n\n  pinSource(sourceId) {\n    const source = this.getSource(sourceId);\n    (0, _invariant.invariant)(source, 'Expected an existing source.');\n    this.pinnedSourceId = sourceId;\n    this.pinnedSource = source;\n  }\n\n  unpinSource() {\n    (0, _invariant.invariant)(this.pinnedSource, 'No source is pinned at the time.');\n    this.pinnedSourceId = null;\n    this.pinnedSource = null;\n  }\n\n  addHandler(role, type, handler) {\n    const id = getNextHandlerId(role);\n    this.types.set(id, type);\n\n    if (role === _interfaces.HandlerRole.SOURCE) {\n      this.dragSources.set(id, handler);\n    } else if (role === _interfaces.HandlerRole.TARGET) {\n      this.dropTargets.set(id, handler);\n    }\n\n    return id;\n  }\n\n  constructor(store) {\n    this.types = new Map();\n    this.dragSources = new Map();\n    this.dropTargets = new Map();\n    this.pinnedSourceId = null;\n    this.pinnedSource = null;\n    this.store = store;\n  }\n\n}\n\nexports.HandlerRegistryImpl = HandlerRegistryImpl;\n};"],
"names":["shadow$provide","global","require","module","exports","parseRoleFromHandlerId","handlerId","_interfaces","HandlerRole","SOURCE","TARGET","Error","mapContainsValue","map","searchValue","entries","isDone","done","value","next","Object","defineProperty","HandlerRegistryImpl","_asap","_invariant","_registry","_contracts","_getNextUniqueId","addSource","type","source","validateType","validateSourceContract","sourceId","addHandler","store","dispatch","addTarget","target","validateTargetContract","targetId","containsHandler","handler","dragSources","dropTargets","getSource","includePinned","invariant","isSourceId","pinnedSourceId","pinnedSource","get","getTarget","isTargetId","getSourceType","types","getTargetType","role","removeSource","asap","delete","removeTarget","pinSource","unpinSource","id","getNextUniqueId","toString","set","constructor","Map"]
}

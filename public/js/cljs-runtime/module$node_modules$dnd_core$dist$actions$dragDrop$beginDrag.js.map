{
"version":3,
"file":"module$node_modules$dnd_core$dist$actions$dragDrop$beginDrag.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/dnd-core/dist/actions/dragDrop/beginDrag.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$dnd_core$dist$actions$dragDrop$beginDrag\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createBeginDrag = createBeginDrag;\n\nvar _invariant = require(\"@react-dnd/invariant\");\n\nvar _js_utils = require(\"../../utils/js_utils.js\");\n\nvar _setClientOffset = require(\"./local/setClientOffset.js\");\n\nvar _types = require(\"./types.js\");\n\nconst ResetCoordinatesAction = {\n  type: _types.INIT_COORDS,\n  payload: {\n    clientOffset: null,\n    sourceClientOffset: null\n  }\n};\n\nfunction createBeginDrag(manager) {\n  return function beginDrag(sourceIds = [], options = {\n    publishSource: true\n  }) {\n    const {\n      publishSource = true,\n      clientOffset,\n      getSourceClientOffset\n    } = options;\n    const monitor = manager.getMonitor();\n    const registry = manager.getRegistry(); // Initialize the coordinates using the client offset\n\n    manager.dispatch((0, _setClientOffset.setClientOffset)(clientOffset));\n    verifyInvariants(sourceIds, monitor, registry); // Get the draggable source\n\n    const sourceId = getDraggableSource(sourceIds, monitor);\n\n    if (sourceId == null) {\n      manager.dispatch(ResetCoordinatesAction);\n      return;\n    } // Get the source client offset\n\n\n    let sourceClientOffset = null;\n\n    if (clientOffset) {\n      if (!getSourceClientOffset) {\n        throw new Error('getSourceClientOffset must be defined');\n      }\n\n      verifyGetSourceClientOffsetIsFunction(getSourceClientOffset);\n      sourceClientOffset = getSourceClientOffset(sourceId);\n    } // Initialize the full coordinates\n\n\n    manager.dispatch((0, _setClientOffset.setClientOffset)(clientOffset, sourceClientOffset));\n    const source = registry.getSource(sourceId);\n    const item = source.beginDrag(monitor, sourceId); // If source.beginDrag returns null, this is an indicator to cancel the drag\n\n    if (item == null) {\n      return undefined;\n    }\n\n    verifyItemIsObject(item);\n    registry.pinSource(sourceId);\n    const itemType = registry.getSourceType(sourceId);\n    return {\n      type: _types.BEGIN_DRAG,\n      payload: {\n        itemType,\n        item,\n        sourceId,\n        clientOffset: clientOffset || null,\n        sourceClientOffset: sourceClientOffset || null,\n        isSourcePublic: !!publishSource\n      }\n    };\n  };\n}\n\nfunction verifyInvariants(sourceIds, monitor, registry) {\n  (0, _invariant.invariant)(!monitor.isDragging(), 'Cannot call beginDrag while dragging.');\n  sourceIds.forEach(function (sourceId) {\n    (0, _invariant.invariant)(registry.getSource(sourceId), 'Expected sourceIds to be registered.');\n  });\n}\n\nfunction verifyGetSourceClientOffsetIsFunction(getSourceClientOffset) {\n  (0, _invariant.invariant)(typeof getSourceClientOffset === 'function', 'When clientOffset is provided, getSourceClientOffset must be a function.');\n}\n\nfunction verifyItemIsObject(item) {\n  (0, _invariant.invariant)((0, _js_utils.isObject)(item), 'Item must be an object.');\n}\n\nfunction getDraggableSource(sourceIds, monitor) {\n  let sourceId = null;\n\n  for (let i = sourceIds.length - 1; i >= 0; i--) {\n    if (monitor.canDragSource(sourceIds[i])) {\n      sourceId = sourceIds[i];\n      break;\n    }\n  }\n\n  return sourceId;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","verifyInvariants","sourceIds","monitor","registry","_invariant","invariant","isDragging","forEach","sourceId","getSource","Object","defineProperty","value","createBeginDrag","manager","beginDrag","options","publishSource","clientOffset","getSourceClientOffset","getMonitor","getRegistry","dispatch","_setClientOffset","setClientOffset","i","length","canDragSource","ResetCoordinatesAction","sourceClientOffset","Error","item","source","_js_utils","isObject","pinSource","itemType","getSourceType","type","_types","BEGIN_DRAG","payload","isSourcePublic","INIT_COORDS"]
}

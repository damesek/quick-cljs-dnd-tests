{
"version":3,
"file":"module$node_modules$react_dnd_html5_backend$dist$OffsetUtils.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/react-dnd-html5-backend/dist/OffsetUtils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_dnd_html5_backend$dist$OffsetUtils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getNodeClientOffset = getNodeClientOffset;\nexports.getEventClientOffset = getEventClientOffset;\nexports.getDragPreviewOffset = getDragPreviewOffset;\n\nvar _BrowserDetector = require(\"./BrowserDetector.js\");\n\nvar _MonotonicInterpolant = require(\"./MonotonicInterpolant.js\");\n\nconst ELEMENT_NODE = 1;\n\nfunction getNodeClientOffset(node) {\n  const el = node.nodeType === ELEMENT_NODE ? node : node.parentElement;\n\n  if (!el) {\n    return null;\n  }\n\n  const {\n    top,\n    left\n  } = el.getBoundingClientRect();\n  return {\n    x: left,\n    y: top\n  };\n}\n\nfunction getEventClientOffset(e) {\n  return {\n    x: e.clientX,\n    y: e.clientY\n  };\n}\n\nfunction isImageNode(node) {\n  var ref;\n  return node.nodeName === 'IMG' && ((0, _BrowserDetector.isFirefox)() || !((ref = document.documentElement) === null || ref === void 0 ? void 0 : ref.contains(node)));\n}\n\nfunction getDragPreviewSize(isImage, dragPreview, sourceWidth, sourceHeight) {\n  let dragPreviewWidth = isImage ? dragPreview.width : sourceWidth;\n  let dragPreviewHeight = isImage ? dragPreview.height : sourceHeight; // Work around @2x coordinate discrepancies in browsers\n\n  if ((0, _BrowserDetector.isSafari)() && isImage) {\n    dragPreviewHeight /= window.devicePixelRatio;\n    dragPreviewWidth /= window.devicePixelRatio;\n  }\n\n  return {\n    dragPreviewWidth,\n    dragPreviewHeight\n  };\n}\n\nfunction getDragPreviewOffset(sourceNode, dragPreview, clientOffset, anchorPoint, offsetPoint) {\n  // The browsers will use the image intrinsic size under different conditions.\n  // Firefox only cares if it's an image, but WebKit also wants it to be detached.\n  const isImage = isImageNode(dragPreview);\n  const dragPreviewNode = isImage ? sourceNode : dragPreview;\n  const dragPreviewNodeOffsetFromClient = getNodeClientOffset(dragPreviewNode);\n  const offsetFromDragPreview = {\n    x: clientOffset.x - dragPreviewNodeOffsetFromClient.x,\n    y: clientOffset.y - dragPreviewNodeOffsetFromClient.y\n  };\n  const {\n    offsetWidth: sourceWidth,\n    offsetHeight: sourceHeight\n  } = sourceNode;\n  const {\n    anchorX,\n    anchorY\n  } = anchorPoint;\n  const {\n    dragPreviewWidth,\n    dragPreviewHeight\n  } = getDragPreviewSize(isImage, dragPreview, sourceWidth, sourceHeight);\n\n  const calculateYOffset = () => {\n    const interpolantY = new _MonotonicInterpolant.MonotonicInterpolant([0, 0.5, 1], [// Dock to the top\n    offsetFromDragPreview.y, // Align at the center\n    offsetFromDragPreview.y / sourceHeight * dragPreviewHeight, // Dock to the bottom\n    offsetFromDragPreview.y + dragPreviewHeight - sourceHeight]);\n    let y = interpolantY.interpolate(anchorY); // Work around Safari 8 positioning bug\n\n    if ((0, _BrowserDetector.isSafari)() && isImage) {\n      // We'll have to wait for @3x to see if this is entirely correct\n      y += (window.devicePixelRatio - 1) * dragPreviewHeight;\n    }\n\n    return y;\n  };\n\n  const calculateXOffset = () => {\n    // Interpolate coordinates depending on anchor point\n    // If you know a simpler way to do this, let me know\n    const interpolantX = new _MonotonicInterpolant.MonotonicInterpolant([0, 0.5, 1], [// Dock to the left\n    offsetFromDragPreview.x, // Align at the center\n    offsetFromDragPreview.x / sourceWidth * dragPreviewWidth, // Dock to the right\n    offsetFromDragPreview.x + dragPreviewWidth - sourceWidth]);\n    return interpolantX.interpolate(anchorX);\n  }; // Force offsets if specified in the options.\n\n\n  const {\n    offsetX,\n    offsetY\n  } = offsetPoint;\n  const isManualOffsetX = offsetX === 0 || offsetX;\n  const isManualOffsetY = offsetY === 0 || offsetY;\n  return {\n    x: isManualOffsetX ? offsetX : calculateXOffset(),\n    y: isManualOffsetY ? offsetY : calculateYOffset()\n  };\n}\n};"],
"names":["shadow$provide","global","require","module","exports","getNodeClientOffset","node","el","ELEMENT_NODE","nodeType","parentElement","top","left","getBoundingClientRect","x","y","Object","defineProperty","value","getEventClientOffset","e","clientX","clientY","getDragPreviewOffset","sourceNode","dragPreview","clientOffset","anchorPoint","offsetPoint","ref","nodeName","_BrowserDetector","isFirefox","document","documentElement","contains","dragPreviewNodeOffsetFromClient","isImage","dragPreviewNode","sourceWidth","sourceHeight","anchorX","anchorY","dragPreviewWidth","width","dragPreviewHeight","height","isSafari","window","devicePixelRatio","offsetX","offsetY","isManualOffsetY","interpolate","interpolantX","_MonotonicInterpolant","MonotonicInterpolant","interpolantY"]
}

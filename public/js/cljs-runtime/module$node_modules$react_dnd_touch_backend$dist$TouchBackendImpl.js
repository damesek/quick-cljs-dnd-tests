shadow$provide.module$node_modules$react_dnd_touch_backend$dist$TouchBackendImpl=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.TouchBackendImpl=void 0;var _invariant=require("module$node_modules$$react_dnd$invariant$dist$index"),_interfaces=require("module$node_modules$react_dnd_touch_backend$dist$interfaces"),_OptionsReader=require("module$node_modules$react_dnd_touch_backend$dist$OptionsReader"),_math=require("module$node_modules$react_dnd_touch_backend$dist$utils$math"),
_offsets=require("module$node_modules$react_dnd_touch_backend$dist$utils$offsets"),_predicates=require("module$node_modules$react_dnd_touch_backend$dist$utils$predicates"),_supportsPassive=require("module$node_modules$react_dnd_touch_backend$dist$utils$supportsPassive");const eventNames={[_interfaces.ListenerType.mouse]:{start:"mousedown",move:"mousemove",end:"mouseup",contextmenu:"contextmenu"},[_interfaces.ListenerType.touch]:{start:"touchstart",move:"touchmove",end:"touchend"},[_interfaces.ListenerType.keyboard]:{keydown:"keydown"}};
class TouchBackendImpl{profile(){var ref;return{sourceNodes:this.sourceNodes.size,sourcePreviewNodes:this.sourcePreviewNodes.size,sourcePreviewNodeOptions:this.sourcePreviewNodeOptions.size,targetNodes:this.targetNodes.size,dragOverTargetIds:(null===(ref=this.dragOverTargetIds)||void 0===ref?void 0:ref.length)||0}}get document(){return this.options.document}setup(){const root=this.options.rootElement;root&&((0,_invariant.invariant)(!TouchBackendImpl.isSetUp,"Cannot have two Touch backends at the same time."),
TouchBackendImpl.isSetUp=!0,this.addEventListener(root,"start",this.getTopMoveStartHandler()),this.addEventListener(root,"start",this.handleTopMoveStartCapture,!0),this.addEventListener(root,"move",this.handleTopMove),this.addEventListener(root,"move",this.handleTopMoveCapture,!0),this.addEventListener(root,"end",this.handleTopMoveEndCapture,!0),this.options.enableMouseEvents&&!this.options.ignoreContextMenu&&this.addEventListener(root,"contextmenu",this.handleTopMoveEndCapture),this.options.enableKeyboardEvents&&
this.addEventListener(root,"keydown",this.handleCancelOnEscape,!0))}teardown(){const root=this.options.rootElement;root&&(TouchBackendImpl.isSetUp=!1,this._mouseClientOffset={},this.removeEventListener(root,"start",this.handleTopMoveStartCapture,!0),this.removeEventListener(root,"start",this.handleTopMoveStart),this.removeEventListener(root,"move",this.handleTopMoveCapture,!0),this.removeEventListener(root,"move",this.handleTopMove),this.removeEventListener(root,"end",this.handleTopMoveEndCapture,
!0),this.options.enableMouseEvents&&!this.options.ignoreContextMenu&&this.removeEventListener(root,"contextmenu",this.handleTopMoveEndCapture),this.options.enableKeyboardEvents&&this.removeEventListener(root,"keydown",this.handleCancelOnEscape,!0),this.uninstallSourceNodeRemovalObserver())}addEventListener(subject,event,handler,capture=!1){const options=_supportsPassive.supportsPassive?{capture,passive:!1}:capture;this.listenerTypes.forEach(function(listenerType){(listenerType=eventNames[listenerType][event])&&
subject.addEventListener(listenerType,handler,options)})}removeEventListener(subject,event,handler,capture=!1){const options=_supportsPassive.supportsPassive?{capture,passive:!1}:capture;this.listenerTypes.forEach(function(listenerType){(listenerType=eventNames[listenerType][event])&&subject.removeEventListener(listenerType,handler,options)})}connectDragSource(sourceId,node){const handleMoveStart=this.handleMoveStart.bind(this,sourceId);this.sourceNodes.set(sourceId,node);this.addEventListener(node,
"start",handleMoveStart);return()=>{this.sourceNodes.delete(sourceId);this.removeEventListener(node,"start",handleMoveStart)}}connectDragPreview(sourceId,node,options){this.sourcePreviewNodeOptions.set(sourceId,options);this.sourcePreviewNodes.set(sourceId,node);return()=>{this.sourcePreviewNodes.delete(sourceId);this.sourcePreviewNodeOptions.delete(sourceId)}}connectDropTarget(targetId,node){const root=this.options.rootElement;if(!this.document||!root)return()=>{};const handleMove=e=>{if(this.document&&
root&&this.monitor.isDragging()){switch(e.type){case eventNames.mouse.move:var coords={x:e.clientX,y:e.clientY};break;case eventNames.touch.move:var ref,ref1;coords={x:(null===(ref=e.touches[0])||void 0===ref?void 0:ref.clientX)||0,y:(null===(ref1=e.touches[0])||void 0===ref1?void 0:ref1.clientY)||0}}ref=(coords=null!=coords?this.document.elementFromPoint(coords.x,coords.y):void 0)&&node.contains(coords);if(coords===node||ref)return this.handleMove(e,targetId)}};this.addEventListener(this.document.body,
"move",handleMove);this.targetNodes.set(targetId,node);return()=>{this.document&&(this.targetNodes.delete(targetId),this.removeEventListener(this.document.body,"move",handleMove))}}getTopMoveStartHandler(){return this.options.delayTouchStart||this.options.delayMouseStart?this.handleTopMoveStartDelay:this.handleTopMoveStart}installSourceNodeRemovalObserver(node){this.uninstallSourceNodeRemovalObserver();this.draggedSourceNode=node;this.draggedSourceNodeRemovalObserver=new MutationObserver(()=>{node&&
!node.parentElement&&(this.resurrectSourceNode(),this.uninstallSourceNodeRemovalObserver())});node&&node.parentElement&&this.draggedSourceNodeRemovalObserver.observe(node.parentElement,{childList:!0})}resurrectSourceNode(){this.document&&this.draggedSourceNode&&(this.draggedSourceNode.style.display="none",this.draggedSourceNode.removeAttribute("data-reactid"),this.document.body.appendChild(this.draggedSourceNode))}uninstallSourceNodeRemovalObserver(){this.draggedSourceNodeRemovalObserver&&this.draggedSourceNodeRemovalObserver.disconnect();
this.draggedSourceNode=this.draggedSourceNodeRemovalObserver=void 0}constructor(manager,context,options){this.getSourceClientOffset=sourceId=>(sourceId=this.sourceNodes.get(sourceId))&&(0,_offsets.getNodeClientOffset)(sourceId);this.handleTopMoveStartCapture=e=>{(0,_predicates.eventShouldStartDrag)(e)&&(this.moveStartSourceIds=[])};this.handleMoveStart=sourceId=>{Array.isArray(this.moveStartSourceIds)&&this.moveStartSourceIds.unshift(sourceId)};this.handleTopMoveStart=e=>{if((0,_predicates.eventShouldStartDrag)(e)){var clientOffset=
(0,_offsets.getEventClientOffset)(e);clientOffset&&((0,_predicates.isTouchEvent)(e)&&(this.lastTargetTouchFallback=e.targetTouches[0]),this._mouseClientOffset=clientOffset);this.waitingForDelay=!1}};this.handleTopMoveStartDelay=e=>{if((0,_predicates.eventShouldStartDrag)(e)){var delay=e.type===eventNames.touch.start?this.options.delayTouchStart:this.options.delayMouseStart;this.timeout=setTimeout(this.handleTopMoveStart.bind(this,e),delay);this.waitingForDelay=!0}};this.handleTopMoveCapture=()=>{this.dragOverTargetIds=
[]};this.handleMove=(_evt,targetId)=>{this.dragOverTargetIds&&this.dragOverTargetIds.unshift(targetId)};this.handleTopMove=e1=>{this.timeout&&clearTimeout(this.timeout);if(this.document&&!this.waitingForDelay){var {moveStartSourceIds,dragOverTargetIds}=this,enableHoverOutsideTarget=this.options.enableHoverOutsideTarget,clientOffset=(0,_offsets.getEventClientOffset)(e1,this.lastTargetTouchFallback);if(clientOffset)if(this._isScrolling||!this.monitor.isDragging()&&(0,_math.inAngleRanges)(this._mouseClientOffset.x||
0,this._mouseClientOffset.y||0,clientOffset.x,clientOffset.y,this.options.scrollAngleRanges))this._isScrolling=!0;else if(!this.monitor.isDragging()&&this._mouseClientOffset.hasOwnProperty("x")&&moveStartSourceIds&&(0,_math.distance)(this._mouseClientOffset.x||0,this._mouseClientOffset.y||0,clientOffset.x,clientOffset.y)>(this.options.touchSlop?this.options.touchSlop:0)&&(this.moveStartSourceIds=void 0,this.actions.beginDrag(moveStartSourceIds,{clientOffset:this._mouseClientOffset,getSourceClientOffset:this.getSourceClientOffset,
publishSource:!1})),this.monitor.isDragging()){var sourceNode=this.sourceNodes.get(this.monitor.getSourceId());this.installSourceNodeRemovalObserver(sourceNode);this.actions.publishDragSource();e1.cancelable&&e1.preventDefault();var dragOverTargetNodes=(dragOverTargetIds||[]).map(key=>this.targetNodes.get(key)).filter(e=>!!e);e1=this.options.getDropTargetElementsAtPoint?this.options.getDropTargetElementsAtPoint(clientOffset.x,clientOffset.y,dragOverTargetNodes):this.document.elementsFromPoint(clientOffset.x,
clientOffset.y);var elementsAtPointExtended=[];for(var nodeId in e1){if(!e1.hasOwnProperty(nodeId))continue;let currentNode=e1[nodeId];for(null!=currentNode&&elementsAtPointExtended.push(currentNode);currentNode;)(currentNode=currentNode.parentElement)&&-1===elementsAtPointExtended.indexOf(currentNode)&&elementsAtPointExtended.push(currentNode)}nodeId=elementsAtPointExtended.filter(node=>-1<dragOverTargetNodes.indexOf(node)).map(node=>this._getDropTargetId(node)).filter(node=>!!node).filter((id,index,
ids)=>ids.indexOf(id)===index);if(enableHoverOutsideTarget)for(const targetId in this.targetNodes)if(enableHoverOutsideTarget=this.targetNodes.get(targetId),sourceNode&&enableHoverOutsideTarget&&enableHoverOutsideTarget.contains(sourceNode)&&-1===nodeId.indexOf(targetId)){nodeId.unshift(targetId);break}nodeId.reverse();this.actions.hover(nodeId,{clientOffset})}}};this._getDropTargetId=node=>{const keys=this.targetNodes.keys();for(var next=keys.next();!1===next.done;){next=next.value;if(node===this.targetNodes.get(next))return next;
next=keys.next()}};this.handleTopMoveEndCapture=e=>{this._isScrolling=!1;this.lastTargetTouchFallback=void 0;(0,_predicates.eventShouldEndDrag)(e)&&(!this.monitor.isDragging()||this.monitor.didDrop()?this.moveStartSourceIds=void 0:(e.cancelable&&e.preventDefault(),this._mouseClientOffset={},this.uninstallSourceNodeRemovalObserver(),this.actions.drop(),this.actions.endDrag()))};this.handleCancelOnEscape=e=>{"Escape"===e.key&&this.monitor.isDragging()&&(this._mouseClientOffset={},this.uninstallSourceNodeRemovalObserver(),
this.actions.endDrag())};this.options=new _OptionsReader.OptionsReader(options,context);this.actions=manager.getActions();this.monitor=manager.getMonitor();this.sourceNodes=new Map;this.sourcePreviewNodes=new Map;this.sourcePreviewNodeOptions=new Map;this.targetNodes=new Map;this.listenerTypes=[];this._mouseClientOffset={};this._isScrolling=!1;this.options.enableMouseEvents&&this.listenerTypes.push(_interfaces.ListenerType.mouse);this.options.enableTouchEvents&&this.listenerTypes.push(_interfaces.ListenerType.touch);
this.options.enableKeyboardEvents&&this.listenerTypes.push(_interfaces.ListenerType.keyboard)}}exports.TouchBackendImpl=TouchBackendImpl}
//# sourceMappingURL=module$node_modules$react_dnd_touch_backend$dist$TouchBackendImpl.js.map
